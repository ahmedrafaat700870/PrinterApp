@model IEnumerable<PrinterApp.Models.ViewModels.RawMaterialViewModel>

@{
    ViewData["Title"] = "Raw Materials Management";
    var currentFilter = ViewData["CurrentFilter"] as string;
}

<div class="content-container">
    <div class="page-header">
        <h2>📦 Raw Materials Management</h2>
        <a asp-action="Create" class="btn-primary-custom">
            ➕ Add New Raw Material
        </a>
    </div>

    @if (TempData["Success"] != null)
    {
        <div class="alert-custom alert-success-custom">
            ✓ @TempData["Success"]
        </div>
    }

    @if (TempData["Error"] != null)
    {
        <div class="alert-custom alert-error-custom">
            ✗ @TempData["Error"]
        </div>
    }

    <!-- Search Bar -->
    <div class="card-custom" style="margin-bottom: 20px;">
        <div style="padding: 20px;">
            <form asp-action="Index" method="get" id="searchForm">
                <div style="display: flex; gap: 10px; align-items: center;">
                    <div style="flex: 1; position: relative;">
                        <input type="text"
                               name="searchTerm"
                               id="searchInput"
                               value="@currentFilter"
                               class="form-control-custom"
                               placeholder="🔍 Search by name, width, height, or price..."
                               style="padding-right: 100px;" />

                        @if (!string.IsNullOrEmpty(currentFilter))
                        {
                            <button type="button"
                                    id="clearSearch"
                                    style="position: absolute; right: 10px; top: 50%; transform: translateY(-50%); background: transparent; border: none; color: var(--danger-color); cursor: pointer; font-size: 20px; padding: 5px 10px;"
                                    title="Clear search">
                                ✕
                            </button>
                        }
                    </div>

                    <button type="submit" class="btn-primary-custom" style="white-space: nowrap;">
                        🔍 Search
                    </button>

                    @if (!string.IsNullOrEmpty(currentFilter))
                    {
                        <a asp-action="Index" class="btn-secondary-custom" style="white-space: nowrap;">
                            🔄 Reset
                        </a>
                    }
                </div>
            </form>

            @if (!string.IsNullOrEmpty(currentFilter))
            {
                <div style="margin-top: 15px; padding: 10px; background: var(--primary-light); color: var(--white); border-radius: var(--border-radius); display: flex; justify-content: space-between; align-items: center;">
                    <span>
                        🔍 Searching for: <strong>"@currentFilter"</strong> - Found <strong>@Model.Count()</strong> result(s)
                    </span>
                </div>
            }
        </div>
    </div>

    <!-- Statistics -->
    @if (Model.Any())
    {
        <div class="card-custom" style="margin-bottom: 20px;">
            <div style="padding: 15px; background: var(--input-bg); border-radius: var(--border-radius);">
                <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(150px, 1fr)); gap: 20px;">
                    <div style="text-align: center;">
                        <div style="font-size: 28px; font-weight: bold; color: var(--primary-color);">
                            @Model.Count()
                        </div>
                        <div style="color: var(--medium-gray); font-size: 14px; margin-top: 5px;">
                            Total Materials
                        </div>
                    </div>
                    <div style="text-align: center;">
                        <div style="font-size: 28px; font-weight: bold; color: var(--success-color);">
                            @Model.Count(r => r.IsActive)
                        </div>
                        <div style="color: var(--medium-gray); font-size: 14px; margin-top: 5px;">
                            Active Materials
                        </div>
                    </div>
                    <div style="text-align: center;">
                        <div style="font-size: 28px; font-weight: bold; color: var(--danger-color);">
                            @Model.Count(r => !r.IsActive)
                        </div>
                        <div style="color: var(--medium-gray); font-size: 14px; margin-top: 5px;">
                            Inactive Materials
                        </div>
                    </div>
                    <div style="text-align: center;">
                        <div style="font-size: 28px; font-weight: bold; color: var(--warning-color);">
                            @(Model.Any() ? Model.Sum(r => r.TotalPrice).ToString("N2") : "0.00")
                        </div>
                        <div style="color: var(--medium-gray); font-size: 14px; margin-top: 5px;">
                            Total Value
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

    <!-- Table -->
    @if (Model.Any())
    {
        <div class="card-custom">
            <table class="table-custom">
                <thead>
                    <tr>
                        <th style="width: 20%;">Material Name</th>
                        <th style="width: 10%;">Width (cm)</th>
                        <th style="width: 10%;">Height (m)</th>
                        <th style="width: 12%;">Total Price</th>
                        <th style="width: 10%;">Area (m²)</th>
                        <th style="width: 12%;">Price/m²</th>
                        <th style="width: 10%;">Price/m</th>
                        <th style="width: 8%;">Status</th>
                        <th style="text-align: center; width: 8%;">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr style="@(item.IsActive ? "" : "opacity: 0.6; background-color: #f5f5f5;")">
                            <td>
                                <strong style="color: var(--text-primary); font-size: 16px;">@item.RawMaterialName</strong>
                            </td>
                            <td>
                                <span style="background: var(--input-bg); padding: 5px 10px; border-radius: var(--border-radius-sm); font-weight: 500;">
                                    @item.Width.ToString("0.##") cm
                                </span>
                            </td>
                            <td>
                                <span style="background: var(--input-bg); padding: 5px 10px; border-radius: var(--border-radius-sm); font-weight: 500;">
                                    @item.Height.ToString("0.##") m
                                </span>
                            </td>
                            <td>
                                <span style="background: var(--success-color); color: var(--white); padding: 5px 12px; border-radius: var(--border-radius-sm); font-weight: bold; font-size: 14px;">
                                    @item.TotalPrice.ToString("N2")
                                </span>
                            </td>
                            <td>
                                <span style="font-weight: 500; color: var(--primary-color);">
                                    @item.AreaSquareMeters.ToString("0.####") m²
                                </span>
                            </td>
                            <td>
                                <span style="background: var(--warning-color); color: var(--white); padding: 5px 10px; border-radius: var(--border-radius-sm); font-size: 13px; font-weight: 500;">
                                    @item.PricePerSquareMeter.ToString("N2")
                                </span>
                            </td>
                            <td>
                                <span style="background: var(--primary-light); color: var(--white); padding: 5px 10px; border-radius: var(--border-radius-sm); font-size: 13px; font-weight: 500;">
                                    @item.PricePerLinearMeter.ToString("N2")
                                </span>
                            </td>
                            <td>
                                @if (item.IsActive)
                                {
                                    <span style="background: var(--success-color); color: var(--white); padding: 5px 12px; border-radius: var(--border-radius-sm); font-size: 12px; font-weight: 500;">
                                        ✓ Active
                                    </span>
                                }
                                else
                                {
                                    <span style="background: var(--danger-color); color: var(--white); padding: 5px 12px; border-radius: var(--border-radius-sm); font-size: 12px; font-weight: 500;">
                                        ✗ Inactive
                                    </span>
                                }
                            </td>
                            <td style="text-align: center;">
                                <div class="action-buttons" style="justify-content: center;">
                                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn-warning-custom btn-sm-custom">
                                        ✏️
                                    </a>

                                    <form asp-action="ToggleStatus" asp-route-id="@item.Id" method="post" style="display:inline;">
                                        <button type="submit" class="@(item.IsActive ? "btn-secondary-custom" : "btn-success-custom") btn-sm-custom">
                                            @(item.IsActive ? "🔒" : "✓")
                                        </button>
                                    </form>

                                    <form asp-action="Delete" asp-route-id="@item.Id" method="post" style="display:inline;">
                                        <button type="submit" class="btn-danger-custom btn-sm-custom"
                                                onclick="return confirm('Are you sure you want to delete this raw material?')">
                                            🗑️
                                        </button>
                                    </form>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    else
    {
        <div class="card-custom">
            <div class="empty-state">
                <div class="empty-state-icon">📦</div>
                <h3 style="color: var(--medium-gray);">
                    @if (!string.IsNullOrEmpty(currentFilter))
                    {
                        <text>No Raw Materials Found</text>
                    }
                    else
                    {
                        <text>No Raw Materials Available</text>
                    }
                </h3>
                <p style="color: var(--medium-gray);">
                    @if (!string.IsNullOrEmpty(currentFilter))
                    {
                        <text>Try adjusting your search criteria</text>
                    }
                    else
                    {
                        <text>Start by adding your first raw material</text>
                    }
                </p>
                @if (string.IsNullOrEmpty(currentFilter))
                {
                    <a asp-action="Create" class="btn-primary-custom" style="margin-top: 20px;">
                        ➕ Add New Raw Material
                    </a>
                }
                else
                {
                    <a asp-action="Index" class="btn-secondary-custom" style="margin-top: 20px;">
                        🔄 Clear Search
                    </a>
                }
            </div>
        </div>
    }
</div>

@section Scripts {
    <script>
        // Search functionality
        let searchTimeout;
        const searchInput = document.getElementById('searchInput');
        const searchForm = document.getElementById('searchForm');
        const clearSearchBtn = document.getElementById('clearSearch');

        if (searchInput) {
            searchInput.addEventListener('input', function() {
                clearTimeout(searchTimeout);
                searchTimeout = setTimeout(function() {
                    if (searchInput.value.length >= 1 || searchInput.value.length === 0) {
                        searchForm.submit();
                    }
                }, 500);
            });
            searchInput.focus();
        }

        if (clearSearchBtn) {
            clearSearchBtn.addEventListener('click', function() {
                searchInput.value = '';
                searchForm.submit();
            });
        }

        // Keyboard shortcut (Ctrl+K to focus search)
        document.addEventListener('keydown', function(e) {
            if ((e.ctrlKey || e.metaKey) && e.key === 'k') {
                e.preventDefault();
                searchInput.focus();
                searchInput.select();
            }
        });
    </script>
}