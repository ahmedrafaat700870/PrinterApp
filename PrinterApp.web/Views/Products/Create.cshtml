@* @model PrinterApp.Models.ViewModels.ProductViewModel

@{
    ViewData["Title"] = "Create Product";
}

<div class="content-container">
    <div class="page-header">
        <h2>➕ Create New Product</h2>
        <a asp-action="Index" class="btn-secondary-custom">
            ← Back to List
        </a>
    </div>

    <div class="card-custom">
        <div class="card-header-custom">
            <h2>📦 Product Information</h2>
        </div>
        <div class="card-body-custom">
            <form asp-action="Create" method="post" id="productForm">
                @if (!ViewData.ModelState.IsValid)
                {
                    <div class="validation-summary">
                        <div asp-validation-summary="All"></div>
                    </div>
                }

                <!-- Basic Information -->
                <div style="background: var(--input-bg); padding: 20px; border-radius: var(--border-radius); margin-bottom: 25px; border-left: 4px solid var(--primary-color);">
                    <h3 style="margin: 0 0 20px 0; color: var(--primary-color); font-size: 18px;">
                        📋 Basic Information
                    </h3>

                    <div class="form-group-custom">
                        <label asp-for="ProductName" class="form-label-custom"></label>
                        <input asp-for="ProductName" class="form-control-custom" placeholder="Enter product name (e.g., Gift Box Premium)" />
                        <span asp-validation-for="ProductName" class="text-danger-custom"></span>
                    </div>

                    <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 20px;">
                        <div class="form-group-custom">
                            <label asp-for="SupplierId" class="form-label-custom"></label>
                            <select asp-for="SupplierId" class="form-control-custom" id="supplierSelect">
                                <option value="">-- Select Supplier --</option>
                                @if (Model.Suppliers != null)
                                {
                                    @foreach (var supplier in Model.Suppliers)
                                    {
                                        <option value="@supplier.Value">@supplier.Text</option>
                                    }
                                }
                            </select>
                            <span asp-validation-for="SupplierId" class="text-danger-custom"></span>
                        </div>

                        <div class="form-group-custom">
                            <label asp-for="ProductCode" class="form-label-custom"></label>
                            <div style="display: flex; gap: 10px;">
                                <input asp-for="ProductCode" class="form-control-custom" placeholder="Will be auto-generated" id="productCodeInput" readonly />
                                <button type="button" class="btn-primary-custom" id="generateCodeBtn" style="white-space: nowrap; min-width: 150px;" disabled>
                                    🔄 Generate Code
                                </button>
                            </div>
                            <span asp-validation-for="ProductCode" class="text-danger-custom"></span>
                            <small style="color: var(--medium-gray); margin-top: 5px; display: block;">
                                💡 Format: Supplier Code + 01, 02, 03...
                            </small>
                        </div>
                    </div>
                </div>

                <!-- Product Type & Raw Material -->
                <div style="background: var(--input-bg); padding: 20px; border-radius: var(--border-radius); margin-bottom: 25px; border-left: 4px solid var(--success-color);">
                    <h3 style="margin: 0 0 20px 0; color: var(--success-color); font-size: 18px;">
                        🎨 Product Type & Material
                    </h3>

                    <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 20px;">
                        <div class="form-group-custom">
                            <label class="form-label-custom">Product Type</label>
                            <div style="display: flex; gap: 20px; margin-top: 10px;">
                                <div class="form-check-custom">
                                    <input asp-for="IsPrinted" type="radio" value="true" class="form-check-input-custom" id="isPrintedTrue" />
                                    <label for="isPrintedTrue" class="form-check-label-custom">
                                        🖨️ Printed
                                    </label>
                                </div>
                                <div class="form-check-custom">
                                    <input asp-for="IsPrinted" type="radio" value="false" class="form-check-input-custom" id="isPrintedFalse" checked />
                                    <label for="isPrintedFalse" class="form-check-label-custom">
                                        📄 Non-Printed
                                    </label>
                                </div>
                            </div>
                            <span asp-validation-for="IsPrinted" class="text-danger-custom"></span>
                        </div>

                        <div class="form-group-custom">
                            <label asp-for="RawMaterialId" class="form-label-custom"></label>
                            <select asp-for="RawMaterialId" class="form-control-custom">
                                <option value="">-- Select Raw Material --</option>
                                @if (Model.RawMaterials != null)
                                {
                                    @foreach (var material in Model.RawMaterials)
                                    {
                                        <option value="@material.Value">@material.Text</option>
                                    }
                                }
                            </select>
                            <span asp-validation-for="RawMaterialId" class="text-danger-custom"></span>
                        </div>
                    </div>
                </div>

                <!-- Manufacturing Additions -->
                <div style="background: var(--input-bg); padding: 20px; border-radius: var(--border-radius); margin-bottom: 25px; border-left: 4px solid var(--warning-color);">
                    <h3 style="margin: 0 0 20px 0; color: var(--warning-color); font-size: 18px;">
                        ⚙️ Manufacturing Additions
                    </h3>

                    @if (Model.AvailableAdditions != null && Model.AvailableAdditions.Any())
                    {
                        <div style="display: grid; grid-template-columns: repeat(auto-fill, minmax(250px, 1fr)); gap: 15px;">
                            @for (int i = 0; i < Model.AvailableAdditions.Count; i++)
                            {
                                <div class="form-check-custom" style="background: var(--white); padding: 12px; border-radius: var(--border-radius-sm); border: 1px solid var(--border-color);">
                                    <input type="checkbox"
                                           name="SelectedAdditionIds"
                                           value="@Model.AvailableAdditions[i].Id"
                                           class="form-check-input-custom"
                                           id="addition_@Model.AvailableAdditions[i].Id" />
                                    <label for="addition_@Model.AvailableAdditions[i].Id" class="form-check-label-custom">
                                        ⚙️ @Model.AvailableAdditions[i].Name
                                    </label>
                                </div>
                            }
                        </div>
                        <small style="color: var(--medium-gray); margin-top: 10px; display: block;">
                            💡 Select all manufacturing additions that apply to this product
                        </small>
                    }
                    else
                    {
                        <div style="text-align: center; padding: 20px; color: var(--medium-gray);">
                            <p>No manufacturing additions available. Please add additions first.</p>
                            <a asp-controller="ManufacturingAdditions" asp-action="Create" class="btn-primary-custom" style="margin-top: 10px;">
                                ➕ Add Manufacturing Addition
                            </a>
                        </div>
                    }
                </div>

                <!-- Description -->
                <div style="background: var(--input-bg); padding: 20px; border-radius: var(--border-radius); margin-bottom: 25px; border-left: 4px solid var(--info-color);">
                    <h3 style="margin: 0 0 20px 0; color: var(--info-color); font-size: 18px;">
                        📝 Description (Optional)
                    </h3>

                    <div class="form-group-custom">
                        <label asp-for="Description" class="form-label-custom"></label>
                        <textarea asp-for="Description" class="form-control-custom" rows="4" placeholder="Enter product description, notes, or specifications..."></textarea>
                        <span asp-validation-for="Description" class="text-danger-custom"></span>
                    </div>
                </div>

                <!-- Examples -->
                <div style="background: linear-gradient(135deg, var(--primary-color) 0%, var(--primary-light) 100%); color: var(--white); padding: 20px; border-radius: var(--border-radius); margin-bottom: 20px;">
                    <h4 style="margin: 0 0 10px 0; font-size: 16px;">💡 Example Product Code Generation</h4>
                    <ul style="margin: 0; padding-left: 20px; line-height: 1.8;">
                        <li>If supplier code is <strong>SUP</strong>, product codes will be: SUP01, SUP02, SUP03...</li>
                        <li>If supplier code is <strong>ABC</strong>, product codes will be: ABC01, ABC02, ABC03...</li>
                        <li>The system automatically generates the next available number</li>
                        <li>Product codes are unique and cannot be duplicated</li>
                    </ul>
                </div>

                <div class="action-buttons" style="margin-top: 30px;">
                    <button type="submit" class="btn-success-custom" id="submitBtn" disabled>
                        💾 Create Product
                    </button>
                    <a asp-action="Index" class="btn-secondary-custom">
                        Cancel
                    </a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        const supplierSelect = document.getElementById('supplierSelect');
        const productCodeInput = document.getElementById('productCodeInput');
        const generateCodeBtn = document.getElementById('generateCodeBtn');
        const submitBtn = document.getElementById('submitBtn');

        // Enable generate button when supplier is selected
        supplierSelect.addEventListener('change', function() {
            if (this.value) {
                generateCodeBtn.disabled = false;
                productCodeInput.value = '';
                submitBtn.disabled = true;
            } else {
                generateCodeBtn.disabled = true;
                productCodeInput.value = '';
                submitBtn.disabled = true;
            }
        });

        // Generate product code
        generateCodeBtn.addEventListener('click', async function() {
            const supplierId = supplierSelect.value;

            if (!supplierId) {
                alert('Please select a supplier first');
                return;
            }

            generateCodeBtn.disabled = true;
            generateCodeBtn.innerHTML = '⏳ Generating...';

            try {
                const response = await fetch(`/Products/GetNextProductCode?supplierId=${supplierId}`);
                const data = await response.json();

                if (data.code) {
                    productCodeInput.value = data.code;
                    submitBtn.disabled = false;
                    generateCodeBtn.innerHTML = '✓ Code Generated';
                    generateCodeBtn.style.background = 'var(--success-color)';
                } else {
                    alert('Error generating product code');
                    generateCodeBtn.disabled = false;
                    generateCodeBtn.innerHTML = '🔄 Generate Code';
                }
            } catch (error) {
                alert('Error generating product code: ' + error.message);
                generateCodeBtn.disabled = false;
                generateCodeBtn.innerHTML = '🔄 Generate Code';
            }
        });

        // Auto-focus on product name
        document.addEventListener('DOMContentLoaded', function() {
            const productNameInput = document.querySelector('input[name="ProductName"]');
            if (productNameInput) {
                productNameInput.focus();
            }
        });
    </script>
} *@

@model PrinterApp.Models.ViewModels.ProductViewModel

@{
    ViewData["Title"] = Lang.GetText("CreateProduct");
}

<div class="content-container">
    <div class="page-header">
        <h2>➕ @Lang.GetText("CreateNewProduct")</h2>
        <a asp-action="Index" class="btn-secondary-custom">
            ← @Lang.GetText("BackToList")
        </a>
    </div>

    <div class="card-custom">
        <div class="card-header-custom">
            <h2>📦 @Lang.GetText("ProductInformation")</h2>
        </div>
        <div class="card-body-custom">
            <form asp-action="Create" method="post" id="productForm">
                @Html.AntiForgeryToken()

                @if (!ViewData.ModelState.IsValid)
                {
                    <div class="validation-summary">
                        <div asp-validation-summary="All"></div>
                    </div>
                }

                <!-- Basic Information -->
                <div style="background: var(--input-bg); padding: 20px; border-radius: var(--border-radius); margin-bottom: 25px; border-left: 4px solid var(--primary-color);">
                    <h3 style="margin: 0 0 20px 0; color: var(--primary-color); font-size: 18px;">
                        📋 @Lang.GetText("BasicInformation")
                    </h3>

                    <div class="form-group-custom">
                        <label asp-for="ProductName" class="form-label-custom">@Lang.GetText("ProductName")</label>
                        <input asp-for="ProductName" class="form-control-custom" placeholder="@Lang.GetText("ProductNamePlaceholder")" />
                        <span asp-validation-for="ProductName" class="text-danger-custom"></span>
                    </div>

                    <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 20px;">
                        <div class="form-group-custom">
                            <label asp-for="SupplierId" class="form-label-custom">@Lang.GetText("Supplier")</label>
                            <select asp-for="SupplierId" class="form-control-custom" id="supplierSelect">
                                <option value="">-- @Lang.GetText("SelectSupplier") --</option>
                                @if (Model.Suppliers != null)
                                {
                                    @foreach (var supplier in Model.Suppliers)
                                    {
                                        <option value="@supplier.Value">@supplier.Text</option>
                                    }
                                }
                            </select>
                            <span asp-validation-for="SupplierId" class="text-danger-custom"></span>
                        </div>

                        <div class="form-group-custom">
                            <label asp-for="ProductCode" class="form-label-custom">@Lang.GetText("ProductCode")</label>
                            <div style="display: flex; gap: 10px;">
                                <input asp-for="ProductCode" class="form-control-custom" placeholder="@Lang.GetText("WillBeAutoGenerated")" id="productCodeInput" readonly />
                                <button type="button" class="btn-primary-custom" id="generateCodeBtn" style="white-space: nowrap; min-width: 150px;" disabled>
                                    🔄 @Lang.GetText("GenerateCode")
                                </button>
                            </div>
                            <span asp-validation-for="ProductCode" class="text-danger-custom"></span>
                            <small style="color: var(--medium-gray); margin-top: 5px; display: block;">
                                💡 @Lang.GetText("ProductCodeFormat")
                            </small>
                        </div>
                    </div>
                </div>

                <!-- Product Type & Raw Material -->
                <div style="background: var(--input-bg); padding: 20px; border-radius: var(--border-radius); margin-bottom: 25px; border-left: 4px solid var(--success-color);">
                    <h3 style="margin: 0 0 20px 0; color: var(--success-color); font-size: 18px;">
                        🎨 @Lang.GetText("ProductTypeAndMaterial")
                    </h3>

                    <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 20px;">
                        <div class="form-group-custom">
                            <label class="form-label-custom">@Lang.GetText("ProductType")</label>
                            <div style="display: flex; gap: 20px; margin-top: 10px;">
                                <div class="form-check-custom">
                                    <input asp-for="IsPrinted" type="radio" value="true" class="form-check-input-custom" id="isPrintedTrue" />
                                    <label for="isPrintedTrue" class="form-check-label-custom">
                                        🖨️ @Lang.GetText("Printed")
                                    </label>
                                </div>
                                <div class="form-check-custom">
                                    <input asp-for="IsPrinted" type="radio" value="false" class="form-check-input-custom" id="isPrintedFalse" checked />
                                    <label for="isPrintedFalse" class="form-check-label-custom">
                                        📄 @Lang.GetText("NonPrinted")
                                    </label>
                                </div>
                            </div>
                            <span asp-validation-for="IsPrinted" class="text-danger-custom"></span>
                        </div>

                        <div class="form-group-custom">
                            <label asp-for="RawMaterialId" class="form-label-custom">@Lang.GetText("RawMaterial")</label>
                            <select asp-for="RawMaterialId" class="form-control-custom">
                                <option value="">-- @Lang.GetText("SelectRawMaterial") --</option>
                                @if (Model.RawMaterials != null)
                                {
                                    @foreach (var material in Model.RawMaterials)
                                    {
                                        <option value="@material.Value">@material.Text</option>
                                    }
                                }
                            </select>
                            <span asp-validation-for="RawMaterialId" class="text-danger-custom"></span>
                        </div>
                    </div>
                </div>

                <!-- Manufacturing Additions -->
                <div style="background: var(--input-bg); padding: 20px; border-radius: var(--border-radius); margin-bottom: 25px; border-left: 4px solid var(--warning-color);">
                    <h3 style="margin: 0 0 20px 0; color: var(--warning-color); font-size: 18px;">
                        ⚙️ @Lang.GetText("ManufacturingAdditions")
                    </h3>

                    @if (Model.AvailableAdditions != null && Model.AvailableAdditions.Any())
                    {
                        <div style="display: grid; grid-template-columns: repeat(auto-fill, minmax(250px, 1fr)); gap: 15px;">
                            @for (int i = 0; i < Model.AvailableAdditions.Count; i++)
                            {
                                <div class="form-check-custom" style="background: var(--white); padding: 12px; border-radius: var(--border-radius-sm); border: 1px solid var(--border-color);">
                                    <input type="checkbox"
                                           name="SelectedAdditionIds"
                                           value="@Model.AvailableAdditions[i].Id"
                                           class="form-check-input-custom"
                                           id="addition_@Model.AvailableAdditions[i].Id" />
                                    <label for="addition_@Model.AvailableAdditions[i].Id" class="form-check-label-custom">
                                        ⚙️ @Model.AvailableAdditions[i].Name
                                    </label>
                                </div>
                            }
                        </div>
                        <small style="color: var(--medium-gray); margin-top: 10px; display: block;">
                            💡 @Lang.GetText("SelectManufacturingAdditionsHint")
                        </small>
                    }
                    else
                    {
                        <div style="text-align: center; padding: 20px; color: var(--medium-gray);">
                            <p>@Lang.GetText("NoManufacturingAdditionsAvailable")</p>
                            <a asp-controller="ManufacturingAdditions" asp-action="Create" class="btn-primary-custom" style="margin-top: 10px;">
                                ➕ @Lang.GetText("AddManufacturingAddition")
                            </a>
                        </div>
                    }
                </div>

                <!-- Description -->
                <div style="background: var(--input-bg); padding: 20px; border-radius: var(--border-radius); margin-bottom: 25px; border-left: 4px solid var(--info-color);">
                    <h3 style="margin: 0 0 20px 0; color: var(--info-color); font-size: 18px;">
                        📝 @Lang.GetText("DescriptionOptional")
                    </h3>

                    <div class="form-group-custom">
                        <label asp-for="Description" class="form-label-custom">@Lang.GetText("Description")</label>
                        <textarea asp-for="Description" class="form-control-custom" rows="4" placeholder="@Lang.GetText("ProductDescriptionPlaceholder")"></textarea>
                        <span asp-validation-for="Description" class="text-danger-custom"></span>
                    </div>
                </div>

                <!-- Examples -->
                <div style="background: linear-gradient(135deg, var(--primary-color) 0%, var(--primary-light) 100%); color: var(--white); padding: 20px; border-radius: var(--border-radius); margin-bottom: 20px;">
                    <h4 style="margin: 0 0 10px 0; font-size: 16px;">💡 @Lang.GetText("ExampleProductCodeGeneration")</h4>
                    <ul style="margin: 0; padding-left: 20px; line-height: 1.8;">
                        <li>@Lang.GetText("ProductCodeExample1")</li>
                        <li>@Lang.GetText("ProductCodeExample2")</li>
                        <li>@Lang.GetText("ProductCodeExample3")</li>
                        <li>@Lang.GetText("ProductCodeExample4")</li>
                    </ul>
                </div>

                <div class="action-buttons" style="margin-top: 30px;">
                    <button type="submit" class="btn-success-custom" id="submitBtn" disabled>
                        💾 @Lang.GetText("CreateProduct")
                    </button>
                    <a asp-action="Index" class="btn-secondary-custom">
                        @Lang.GetText("Cancel")
                    </a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        const supplierSelect = document.getElementById('supplierSelect');
        const productCodeInput = document.getElementById('productCodeInput');
        const generateCodeBtn = document.getElementById('generateCodeBtn');
        const submitBtn = document.getElementById('submitBtn');

        const translations = {
            pleaseSelectSupplier: '@Lang.GetText("PleaseSelectSupplierFirst")',
            generating: '@Lang.GetText("Generating")',
            codeGenerated: '@Lang.GetText("CodeGenerated")',
            generateCode: '@Lang.GetText("GenerateCode")',
            errorGeneratingCode: '@Lang.GetText("ErrorGeneratingProductCode")'
        };

        // Enable generate button when supplier is selected
        supplierSelect.addEventListener('change', function() {
            if (this.value) {
                generateCodeBtn.disabled = false;
                productCodeInput.value = '';
                submitBtn.disabled = true;
            } else {
                generateCodeBtn.disabled = true;
                productCodeInput.value = '';
                submitBtn.disabled = true;
            }
        });

        // Generate product code
        generateCodeBtn.addEventListener('click', async function() {
            const supplierId = supplierSelect.value;

            if (!supplierId) {
                alert(translations.pleaseSelectSupplier);
                return;
            }

            generateCodeBtn.disabled = true;
            generateCodeBtn.innerHTML = '⏳ ' + translations.generating + '...';

            try {
                const response = await fetch(`/Products/GetNextProductCode?supplierId=${supplierId}`);
                const data = await response.json();

                if (data.code) {
                    productCodeInput.value = data.code;
                    submitBtn.disabled = false;
                    generateCodeBtn.innerHTML = '✓ ' + translations.codeGenerated;
                    generateCodeBtn.style.background = 'var(--success-color)';
                } else {
                    alert(translations.errorGeneratingCode);
                    generateCodeBtn.disabled = false;
                    generateCodeBtn.innerHTML = '🔄 ' + translations.generateCode;
                }
            } catch (error) {
                alert(translations.errorGeneratingCode + ': ' + error.message);
                generateCodeBtn.disabled = false;
                generateCodeBtn.innerHTML = '🔄 ' + translations.generateCode;
            }
        });

        // Auto-focus on product name
        document.addEventListener('DOMContentLoaded', function() {
            const productNameInput = document.querySelector('input[name="ProductName"]');
            if (productNameInput) {
                productNameInput.focus();
            }
        });
    </script>
}