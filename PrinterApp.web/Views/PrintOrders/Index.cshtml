@model IEnumerable<PrinterApp.Models.ViewModels.OrderViewModel>

@{
    ViewData["Title"] = "طلبات الطباعة";
    var currentFilter = ViewData["CurrentFilter"] as string;
    var currentStatus = ViewData["CurrentStatus"] as string;
    var currentStage = ViewData["CurrentStage"] as string;
    var fromDate = ViewData["FromDate"] as string;
    var toDate = ViewData["ToDate"] as string;
}

<div class="content-container">
    <div class="page-header">
        <div>
            <h2>🖨️ طلبات الطباعة</h2>
            <p style="color: var(--medium-gray); margin-top: 5px;">إدارة وعرض طلبات الطباعة</p>
        </div>
        <div style="display: flex; gap: 10px;">
            @if (User.HasClaim("Permission", "ORDERS.Manage"))
            {
                <a asp-action="PrintQueue" class="btn-primary-custom">
                    ⭐ إدارة قائمة الانتظار
                </a>
            }
            <a asp-controller="Orders" asp-action="Index" class="btn-secondary-custom">
                📋 جميع الطلبات
            </a>
        </div>
    </div>

    @if (TempData["Success"] != null)
    {
        <div class="alert-custom alert-success-custom">
            ✓ @TempData["Success"]
        </div>
    }

    @if (TempData["Error"] != null)
    {
        <div class="alert-custom alert-error-custom">
            ✗ @TempData["Error"]
        </div>
    }

    <!-- Quick Stats -->
    <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 15px; margin-bottom: 20px;">
        <a asp-action="Index" asp-route-status="" class="card-custom" style="text-decoration: none; padding: 20px; text-align: center; @(string.IsNullOrEmpty(currentStatus) && string.IsNullOrEmpty(currentStage) ? "border: 2px solid var(--primary-color);" : "")">
            <div style="font-size: 32px; font-weight: bold; color: var(--primary-color);">@Model.Count()</div>
            <div style="color: var(--medium-gray); margin-top: 5px;">جميع الطلبات</div>
        </a>
        
        <a asp-action="Index" asp-route-stage="Order" class="card-custom" style="text-decoration: none; padding: 20px; text-align: center; @(currentStage == "Order" ? "border: 2px solid var(--warning-color);" : "")">
            <div style="font-size: 32px; font-weight: bold; color: var(--warning-color);">@Model.Count(o => o.Stage == PrinterApp.Models.Entities.OrderStage.Order)</div>
            <div style="color: var(--medium-gray); margin-top: 5px;">مرحلة الطلب</div>
        </a>
        
        <a asp-action="Index" asp-route-stage="Review" class="card-custom" style="text-decoration: none; padding: 20px; text-align: center; @(currentStage == "Review" ? "border: 2px solid var(--info-color);" : "")">
            <div style="font-size: 32px; font-weight: bold; color: var(--info-color);">@Model.Count(o => o.Stage == PrinterApp.Models.Entities.OrderStage.Review)</div>
            <div style="color: var(--medium-gray); margin-top: 5px;">مرحلة المراجعة</div>
        </a>
        
        <a asp-action="Index" asp-route-stage="Manufacturing" class="card-custom" style="text-decoration: none; padding: 20px; text-align: center; @(currentStage == "Manufacturing" ? "border: 2px solid var(--primary-color);" : "")">
            <div style="font-size: 32px; font-weight: bold; color: var(--primary-color);">@Model.Count(o => o.Stage == PrinterApp.Models.Entities.OrderStage.Manufacturing)</div>
            <div style="color: var(--medium-gray); margin-top: 5px;">مرحلة التصنيع</div>
        </a>
        
        <a asp-action="Index" asp-route-stage="Printing" class="card-custom" style="text-decoration: none; padding: 20px; text-align: center; @(currentStage == "Printing" ? "border: 2px solid var(--secondary-color);" : "")">
            <div style="font-size: 32px; font-weight: bold; color: var(--secondary-color);">@Model.Count(o => o.Stage == PrinterApp.Models.Entities.OrderStage.Printing)</div>
            <div style="color: var(--medium-gray); margin-top: 5px;">مرحلة الطباعة</div>
        </a>
        
        <a asp-action="Index" asp-route-stage="Completed" class="card-custom" style="text-decoration: none; padding: 20px; text-align: center; @(currentStage == "Completed" ? "border: 2px solid var(--success-color);" : "")">
            <div style="font-size: 32px; font-weight: bold; color: var(--success-color);">@Model.Count(o => o.Stage == PrinterApp.Models.Entities.OrderStage.Completed)</div>
            <div style="color: var(--medium-gray); margin-top: 5px;">مكتمل</div>
        </a>
        
        <div class="card-custom" style="padding: 20px; text-align: center; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white;">
            <div style="font-size: 32px; font-weight: bold;">@Model.Count(o => o.Priority <= 10)</div>
            <div style="margin-top: 5px; opacity: 0.9;">⭐ أولوية عالية</div>
        </div>
    </div>

    <!-- Search and Filters -->
    <div class="card-custom" style="margin-bottom: 20px;">
        <div style="padding: 20px;">
            <form asp-action="Index" method="get" id="searchForm">
                <div style="display: flex; gap: 10px; align-items: end; flex-wrap: wrap;">
                    <!-- Search Input -->
                    <div style="flex: 1; min-width: 250px;">
                        <label for="searchInput" style="display: block; margin-bottom: 5px; font-weight: bold;">بحث</label>
                        <div style="position: relative;">
                            <input type="text"
                                   name="searchTerm"
                                   id="searchInput"
                                   value="@currentFilter"
                                   class="form-control-custom"
                                   placeholder="🔍 بحث برقم الطلب، العميل، المنتج..."
                                   style="padding-right: 100px;" />

                            @if (!string.IsNullOrEmpty(currentFilter))
                            {
                                <button type="button"
                                        id="clearSearch"
                                        style="position: absolute; left: 10px; top: 50%; transform: translateY(-50%); background: transparent; border: none; color: var(--error-color); cursor: pointer; font-size: 20px; padding: 5px 10px;"
                                        title="مسح البحث">
                                    ✕
                                </button>
                            }
                        </div>
                    </div>

                    <!-- From Date -->
                    <div style="min-width: 200px;">
                        <label for="fromDate" style="display: block; margin-bottom: 5px; font-weight: bold;">من تاريخ</label>
                        <input type="date"
                               name="fromDate"
                               id="fromDate"
                               value="@fromDate"
                               class="form-control-custom" />
                    </div>

                    <!-- To Date -->
                    <div style="min-width: 200px;">
                        <label for="toDate" style="display: block; margin-bottom: 5px; font-weight: bold;">إلى تاريخ</label>
                        <input type="date"
                               name="toDate"
                               id="toDate"
                               value="@toDate"
                               class="form-control-custom" />
                    </div>

                    <!-- Buttons -->
                    <div style="display: flex; gap: 10px;">
                        <button type="submit" class="btn-primary-custom" style="white-space: nowrap;">
                            🔍 بحث
                        </button>

                        @if (!string.IsNullOrEmpty(currentFilter) || !string.IsNullOrEmpty(currentStatus) || !string.IsNullOrEmpty(currentStage) || !string.IsNullOrEmpty(fromDate) || !string.IsNullOrEmpty(toDate))
                        {
                            <a asp-action="Index" class="btn-secondary-custom" style="white-space: nowrap;">
                                🔄 إعادة تعيين
                            </a>
                        }
                    </div>
                </div>
            </form>
        </div>
    </div>

    <!-- Orders Table -->
    <div class="card-custom">
        <div class="table-responsive-full">
            @if (Model.Any())
            {
                <table class="table-custom table-full-data">
                    <thead>
                        <tr>
                            <th class="sticky-left-1" style="width: 70px; text-align: center;">الأولوية</th>
                            <th class="sticky-left-2" style="width: 120px;">رقم الطلب</th>
                            <th style="width: 100px;">تاريخ الطلب</th>
                            <th style="width: 150px;">العميل</th>
                            <th style="width: 150px;">المورد</th>
                            <th style="width: 150px;">المنتج</th>
                            <th style="text-align: center; width: 80px;">الكمية</th>
                            <th style="text-align: center; width: 80px;">الطول</th>
                            <th style="text-align: center; width: 80px;">العرض</th>
                            <th style="text-align: center; width: 100px;">المساحة</th>
                            <th style="width: 120px;">نوع الخام</th>
                            <th style="text-align: center; width: 120px;">اتجاه الرول</th>
                            <th style="text-align: center; width: 110px;">المرحلة</th>
                            <th style="text-align: center; width: 110px;">الحالة</th>
                            <th style="text-align: center; width: 100px;">تاريخ التسليم المتوقع</th>
                            <th style="text-align: center; width: 100px;">تاريخ التسليم الفعلي</th>
                            <th style="text-align: center; width: 80px;">المرفقات</th>
                            <th style="text-align: center; width: 80px;">التصنيع</th>
                            <th style="width: 200px;">ملاحظات</th>
                            <th style="text-align: center; width: 100px;">تاريخ الإنشاء</th>
                            <th class="sticky-right" style="text-align: center; width: 200px;">إجراءات</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var order in Model.OrderBy(o => o.Priority).ThenBy(o => o.ExpectedDeliveryDate))
                        {
                            <tr class="@(order.IsLate ? "late-row" : "")">
                                <!-- Priority (Sticky) -->
                                <td class="sticky-left-1" style="text-align: center;">
                                    <span class="@GetPriorityBadgeClass(order.Priority)" style="font-weight: bold; font-size: 14px;">
                                        @order.Priority
                                    </span>
                                </td>
                                
                                <!-- Order Number (Sticky) -->
                                <td class="sticky-left-2">
                                    <strong style="color: var(--primary-color);">@order.OrderNumber</strong>
                                </td>
                                
                                <!-- Order Date -->
                                <td class="compact-cell">
                                    @order.OrderDate.ToString("yyyy-MM-dd")
                                </td>
                                
                                <!-- Customer -->
                                <td class="compact-cell">@order.CustomerName</td>
                                
                                <!-- Supplier -->
                                <td class="compact-cell">@order.SupplierName</td>
                                
                                <!-- Product -->
                                <td class="compact-cell">@order.ProductName</td>
                                
                                <!-- Quantity -->
                                <td style="text-align: center;">
                                    <span class="badge bg-secondary" style="font-size: 13px;">@order.Quantity</span>
                                </td>
                                
                                <!-- Length -->
                                <td style="text-align: center;" class="compact-cell">
                                    @order.Length <small>سم</small>
                                </td>
                                
                                <!-- Width -->
                                <td style="text-align: center;" class="compact-cell">
                                    @order.Width <small>سم</small>
                                </td>
                                
                                <!-- Area (Calculated) -->
                                <td style="text-align: center;" class="compact-cell">
                                    <strong>@((order.Length * order.Width).ToString("F0"))</strong> <small>سم²</small>
                                </td>
                                
                                <!-- Raw Material -->
                                <td class="compact-cell">
                                    @if (!string.IsNullOrEmpty(order.RawMaterialName))
                                    {
                                        <span style="font-size: 12px;">@order.RawMaterialName</span>
                                    }
                                    else
                                    {
                                        <span style="color: var(--medium-gray);">-</span>
                                    }
                                </td>
                                
                                <!-- Roll Direction with Image -->
                                <td style="text-align: center;">
                                    @if (!string.IsNullOrEmpty(order.RollDirectionNumber))
                                    {
                                        <div style="display: flex; align-items: center; justify-content: center; gap: 8px;">
                                            @if (!string.IsNullOrEmpty(order.RollDirectionImage))
                                            {
                                                <img src="@order.RollDirectionImage" 
                                                     alt="@order.RollDirectionNumber" 
                                                     class="roll-direction-thumb"
                                                     title="اتجاه الرول: @order.RollDirectionNumber" />
                                            }
                                            <span style="font-weight: bold; color: var(--primary-color);">@order.RollDirectionNumber</span>
                                        </div>
                                    }
                                    else
                                    {
                                        <span style="color: var(--medium-gray);">-</span>
                                    }
                                </td>
                                
                                <!-- Stage -->
                                <td style="text-align: center;">
                                    <span class="@order.StageBadgeClass" style="font-size: 12px;">@order.StageText</span>
                                </td>
                                
                                <!-- Status -->
                                <td style="text-align: center;">
                                    <span class="@order.StatusBadgeClass" style="font-size: 12px;">@order.StatusText</span>
                                </td>
                                
                                <!-- Expected Delivery Date -->
                                <td style="text-align: center;" class="compact-cell">
                                    <div>@order.ExpectedDeliveryDate.ToString("yyyy-MM-dd")</div>
                                    @if (order.IsLate)
                                    {
                                        <div style="color: var(--error-color); font-weight: bold; font-size: 11px; margin-top: 2px;">⚠️ متأخر</div>
                                    }
                                </td>
                                
                                <!-- Actual Delivery Date -->
                                <td style="text-align: center;" class="compact-cell">
                                    @if (order.ActualDeliveryDate.HasValue)
                                    {
                                        <span style="color: var(--success-color); font-weight: bold;">@order.ActualDeliveryDate.Value.ToString("yyyy-MM-dd")</span>
                                    }
                                    else
                                    {
                                        <span style="color: var(--medium-gray);">-</span>
                                    }
                                </td>
                                
                                <!-- Attachments Count -->
                                <td style="text-align: center;">
                                    @if (order.AttachmentsCount > 0)
                                    {
                                        <span class="badge bg-info" title="@order.AttachmentsCount مرفقات">
                                            📎 @order.AttachmentsCount
                                        </span>
                                    }
                                    else
                                    {
                                        <span style="color: var(--medium-gray);">-</span>
                                    }
                                </td>
                                
                                <!-- Manufacturing Items Count -->
                                <td style="text-align: center;">
                                    @if (order.ManufacturingItemsCount > 0)
                                    {
                                        <span class="badge bg-warning" title="@order.ManufacturingItemsCount عناصر تصنيع">
                                            ⚙️ @order.ManufacturingItemsCount
                                        </span>
                                    }
                                    else
                                    {
                                        <span style="color: var(--medium-gray);">-</span>
                                    }
                                </td>
                                
                                <!-- Notes (Truncated) -->
                                <td class="compact-cell">
                                    @if (!string.IsNullOrEmpty(order.OrderNotes))
                                    {
                                        var truncatedNotes = order.OrderNotes.Length > 50 ? order.OrderNotes.Substring(0, 50) + "..." : order.OrderNotes;
                                        <span title="@order.OrderNotes" style="font-size: 12px; color: var(--medium-gray);">@truncatedNotes</span>
                                    }
                                    else
                                    {
                                        <span style="color: var(--medium-gray);">-</span>
                                    }
                                </td>
                                
                                <!-- Created Date -->
                                <td style="text-align: center;" class="compact-cell">
                                    <small>@order.CreatedDate.ToString("yyyy-MM-dd")</small>
                                </td>
                                
                                <!-- Actions (Sticky) -->
                                <td class="sticky-right" style="text-align: center;">
                                    <div style="display: flex; gap: 5px; justify-content: center; flex-wrap: wrap;">
                                        <!-- View Details -->
                                        <a asp-action="PrintDetails" asp-route-id="@order.Id" 
                                           class="btn-sm btn-info" 
                                           title="التفاصيل">
                                            👁️
                                        </a>
                                        
                                        <!-- Stage-based Actions -->
                                        @switch (order.Stage)
                                        {
                                            case PrinterApp.Models.Entities.OrderStage.Order:
                                                <!-- Move to Review -->
                                                @if (User.HasClaim("Permission", "ORDERS.Manage"))
                                                {
                                                    <form asp-controller="Orders" asp-action="MoveToReview" method="post" style="display: inline;">
                                                        @Html.AntiForgeryToken()
                                                        <input type="hidden" name="id" value="@order.Id" />
                                                        <button type="submit" class="btn-sm btn-success" title="نقل للمراجعة">
                                                            ➡️ مراجعة
                                                        </button>
                                                    </form>
                                                }
                                                break;

                                            case PrinterApp.Models.Entities.OrderStage.Review:
                                                <!-- Go to Review Page -->
                                                <a asp-controller="Orders" asp-action="Review" asp-route-id="@order.Id" 
                                                   class="btn-sm btn-primary" 
                                                   title="صفحة المراجعة">
                                                    📝 مراجعة
                                                </a>
                                                break;

                                            case PrinterApp.Models.Entities.OrderStage.Manufacturing:
                                                <!-- Go to Manufacturing Page -->
                                                <a asp-controller="Orders" asp-action="Manufacturing" asp-route-id="@order.Id" 
                                                   class="btn-sm btn-primary" 
                                                   title="صفحة التصنيع">
                                                    ⚙️ تصنيع
                                                </a>
                                                break;

                                            case PrinterApp.Models.Entities.OrderStage.Printing:
                                                <!-- Go to Printing Page -->
                                                <a asp-controller="Orders" asp-action="Printing" asp-route-id="@order.Id" 
                                                   class="btn-sm btn-primary" 
                                                   title="صفحة الطباعة">
                                                    🖨️ طباعة
                                                </a>
                                                @if (order.Status == PrinterApp.Models.Entities.OrderStatus.InPrinting)
                                                {
                                                    <!-- Complete Printing -->
                                                    <form asp-controller="Orders" asp-action="CompletePrinting" method="post" style="display: inline;">
                                                        @Html.AntiForgeryToken()
                                                        <input type="hidden" name="id" value="@order.Id" />
                                                        <button type="submit" class="btn-sm btn-success" title="إكمال الطباعة">
                                                            ✓ إكمال
                                                        </button>
                                                    </form>
                                                }
                                                break;

                                            case PrinterApp.Models.Entities.OrderStage.Completed:
                                                <!-- Completed Badge -->
                                                <span class="btn-sm btn-success-static" title="مكتمل">
                                                    ✓ مكتمل
                                                </span>
                                                break;
                                        }
                                        
                                        <!-- Manager Actions -->
                                        @if (User.HasClaim("Permission", "ORDERS.Manage"))
                                        {
                                            <a asp-action="Edit" asp-route-id="@order.Id" 
                                               class="btn-sm btn-warning" 
                                               title="تعديل">
                                                ✏️
                                            </a>
                                            
                                            @if (order.Status != PrinterApp.Models.Entities.OrderStatus.Completed && 
                                                 order.Status != PrinterApp.Models.Entities.OrderStatus.Cancelled)
                                            {
                                                <button type="button" 
                                                        class="btn-sm btn-cancel" 
                                                        onclick="showCancelModal(@order.Id, '@order.OrderNumber')"
                                                        title="إلغاء الطلب">
                                                    ⏸️
                                                </button>
                                            }
                                            
                                            <button type="button" 
                                                    class="btn-sm btn-danger" 
                                                    onclick="confirmDelete(@order.Id, '@order.OrderNumber')"
                                                    title="حذف">
                                                🗑️
                                            </button>
                                        }
                                        
                                        <!-- Full Details -->
                                        <a asp-controller="Orders" asp-action="Details" asp-route-id="@order.Id" 
                                           class="btn-sm btn-secondary" 
                                           title="تفاصيل كاملة">
                                            📄
                                        </a>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
                
                <!-- Pagination -->
                @await Html.PartialAsync("_Pagination", Model)
            }
            else
            {
                <div style="padding: 60px 20px; text-align: center; color: var(--medium-gray);">
                    <div style="font-size: 64px; margin-bottom: 20px;">📭</div>
                    <h3>لا توجد طلبات طباعة</h3>
                    <p>لم يتم العثور على طلبات للطباعة حالياً</p>
                    <a asp-controller="Orders" asp-action="Index" class="btn-primary-custom" style="margin-top: 20px;">
                        عرض جميع الطلبات
                    </a>
                </div>
            }
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div id="deleteModal" class="modal" style="display: none;">
    <div class="modal-content" style="max-width: 500px;">
        <div class="modal-header">
            <h3>🗑️ تأكيد الحذف</h3>
            <button type="button" class="close-modal" onclick="closeDeleteModal()">✕</button>
        </div>
        <form id="deleteForm" method="post">
            @Html.AntiForgeryToken()
            <div class="modal-body">
                <div style="padding: 20px; text-align: center;">
                    <div style="font-size: 64px; color: var(--error-color); margin-bottom: 20px;">⚠️</div>
                    <h3 style="margin-bottom: 10px;">هل أنت متأكد من حذف هذا الطلب؟</h3>
                    <p style="color: var(--medium-gray); margin-bottom: 20px;">
                        طلب رقم: <strong id="deleteOrderNumber"></strong>
                    </p>
                    <div style="background: #fff3cd; border: 1px solid #ffc107; padding: 15px; border-radius: 5px; text-align: right;">
                        <strong>⚠️ تحذير:</strong>
                        <p style="margin: 5px 0 0 0;">لا يمكن التراجع عن هذا الإجراء. سيتم حذف جميع البيانات المرتبطة بهذا الطلب.</p>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn-secondary-custom" onclick="closeDeleteModal()">إلغاء</button>
                <button type="submit" class="btn-danger-custom">🗑️ حذف الطلب</button>
            </div>
        </form>
    </div>
</div>

<!-- Cancel Order Modal -->
<div id="cancelModal" class="modal" style="display: none;">
    <div class="modal-content" style="max-width: 500px;">
        <div class="modal-header">
            <h3>⏸️ إلغاء الطلب</h3>
            <button type="button" class="close-modal" onclick="closeCancelModal()">✕</button>
        </div>
        <form id="cancelForm" asp-controller="Orders" asp-action="Cancel" method="post">
            @Html.AntiForgeryToken()
            <input type="hidden" id="cancelOrderId" name="id" />
            <div class="modal-body">
                <div style="padding: 20px;">
                    <h3 style="margin-bottom: 10px; text-align: center;">هل تريد إلغاء هذا الطلب؟</h3>
                    <p style="color: var(--medium-gray); margin-bottom: 20px; text-align: center;">
                        طلب رقم: <strong id="cancelOrderNumber"></strong>
                    </p>
                    
                    <div class="form-group">
                        <label for="cancelReason">سبب الإلغاء <span style="color: red;">*</span></label>
                        <textarea id="cancelReason" 
                                  name="reason" 
                                  class="form-control-custom" 
                                  rows="4" 
                                  required
                                  placeholder="يرجى إدخال سبب إلغاء الطلب..."></textarea>
                    </div>
                    
                    <div style="background: #fff3cd; border: 1px solid #ffc107; padding: 15px; border-radius: 5px; margin-top: 15px; text-align: right;">
                        <strong>📝 ملاحظة:</strong>
                        <p style="margin: 5px 0 0 0;">سيتم تسجيل سبب الإلغاء في سجل الطلب.</p>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn-secondary-custom" onclick="closeCancelModal()">إلغاء</button>
                <button type="submit" class="btn-warning-custom">⏸️ إلغاء الطلب</button>
            </div>
        </form>
    </div>
</div>

@functions {
    string GetPriorityBadgeClass(int priority)
    {
        return priority switch
        {
            <= 5 => "badge bg-danger",
            <= 10 => "badge bg-warning",
            <= 20 => "badge bg-info",
            _ => "badge bg-secondary"
        };
    }
}

<style>
    .late-row {
        background-color: #fff5f5;
    }
    
    .late-row:hover {
        background-color: #ffe5e5 !important;
    }
    
    .btn-sm {
        padding: 5px 10px;
        font-size: 13px;
        border-radius: 5px;
        text-decoration: none;
        display: inline-block;
        transition: all 0.3s;
    }
    
    .btn-info {
        background: var(--info-color);
        color: white;
    }
    
    .btn-info:hover {
        background: #0056b3;
        transform: translateY(-2px);
    }
    
    .btn-secondary {
        background: var(--medium-gray);
        color: white;
    }
    
    .btn-secondary:hover {
        background: var(--dark-gray);
        transform: translateY(-2px);
    }
    
    .btn-warning {
        background: var(--warning-color);
        color: white;
        border: none;
        cursor: pointer;
    }
    
    .btn-warning:hover {
        background: #e0a800;
        transform: translateY(-2px);
    }
    
    .btn-danger {
        background: var(--error-color);
        color: white;
        border: none;
        cursor: pointer;
    }
    
    .btn-danger:hover {
        background: #c82333;
        transform: translateY(-2px);
    }
    
    .modal {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.5);
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 1000;
    }
    
    .modal-content {
        background: white;
        border-radius: 10px;
        width: 90%;
        max-height: 90vh;
        overflow: auto;
    }
    
    .modal-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 20px;
        border-bottom: 1px solid var(--light-gray);
    }
    
    .modal-body {
        padding: 20px;
    }
    
    .modal-footer {
        display: flex;
        justify-content: flex-end;
        gap: 10px;
        padding: 20px;
        border-top: 1px solid var(--light-gray);
    }
    
    .close-modal {
        background: transparent;
        border: none;
        font-size: 24px;
        cursor: pointer;
        color: var(--medium-gray);
    }
    
    .close-modal:hover {
        color: var(--error-color);
    }
    
    .btn-danger-custom {
        background: var(--error-color);
        color: white;
        padding: 10px 20px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        font-weight: bold;
        transition: all 0.3s;
    }
    
    .btn-danger-custom:hover {
        background: #c82333;
        transform: translateY(-2px);
    }
    
    .btn-success {
        background: var(--success-color);
        color: white;
        border: none;
        cursor: pointer;
    }
    
    .btn-success:hover {
        background: #218838;
        transform: translateY(-2px);
    }
    
    .btn-success-static {
        background: var(--success-color);
        color: white;
        border: none;
        cursor: default;
    }
    
    .btn-primary {
        background: var(--primary-color);
        color: white;
        border: none;
        cursor: pointer;
    }
    
    .btn-primary:hover {
        background: #0056b3;
        transform: translateY(-2px);
    }
    
    .btn-cancel {
        background: #6c757d;
        color: white;
        border: none;
        cursor: pointer;
    }
    
    .btn-cancel:hover {
        background: #5a6268;
        transform: translateY(-2px);
    }
    
    .btn-warning-custom {
        background: var(--warning-color);
        color: white;
        padding: 10px 20px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        font-weight: bold;
        transition: all 0.3s;
    }
    
    .btn-warning-custom:hover {
        background: #e0a800;
        transform: translateY(-2px);
    }
    
    .form-group {
        margin-bottom: 15px;
    }
    
    .form-group label {
        display: block;
        margin-bottom: 5px;
        font-weight: bold;
    }
    
    /* Full Data Table with Horizontal Scroll and Sticky Columns */
    .table-responsive-full {
        overflow-x: auto;
        position: relative;
        max-width: 100%;
        border: 1px solid var(--light-gray);
        border-radius: 8px;
    }
    
    .table-full-data {
        min-width: 2500px; /* Minimum width to show all columns */
    }
    
    /* Sticky Left Columns */
    .sticky-left-1 {
        position: sticky;
        left: 0;
        z-index: 20;
        background: white;
        box-shadow: 2px 0 5px rgba(0,0,0,0.1);
    }
    
    .sticky-left-2 {
        position: sticky;
        left: 70px; /* Width of first column */
        z-index: 20;
        background: white;
        box-shadow: 2px 0 5px rgba(0,0,0,0.1);
    }
    
    /* Sticky Right Column */
    .sticky-right {
        position: sticky;
        right: 0;
        z-index: 20;
        background: white;
        box-shadow: -2px 0 5px rgba(0,0,0,0.1);
    }
    
    /* Sticky header cells */
    thead th.sticky-left-1,
    thead th.sticky-left-2,
    thead th.sticky-right {
        background: var(--primary-color);
        z-index: 30;
    }
    
    /* Compact cell styling */
    .compact-cell {
        white-space: nowrap;
        padding: 10px 12px;
        font-size: 13px;
    }
    
    /* Roll Direction Thumbnail */
    .roll-direction-thumb {
        width: 40px;
        height: 40px;
        border-radius: 6px;
        object-fit: cover;
        border: 2px solid var(--primary-color);
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }
    
    /* Late row styling */
    .late-row {
        background-color: rgba(220, 53, 69, 0.05);
    }
    
    .late-row:hover {
        background-color: rgba(220, 53, 69, 0.1);
    }
    
    /* Better table borders for wide table */
    .table-full-data td {
        border-left: 1px solid rgba(0,0,0,0.05);
    }
    
    .table-full-data td:first-child,
    .table-full-data th:first-child {
        border-left: none;
    }
    
    /* Scroll hint shadow */
    .table-responsive-full::after {
        content: '';
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        width: 30px;
        background: linear-gradient(to left, rgba(0,0,0,0.1), transparent);
        pointer-events: none;
        opacity: 0;
        transition: opacity 0.3s;
    }
    
    .table-responsive-full:not(.scrolled-end)::after {
        opacity: 1;
    }
    
    /* Responsive adjustments */
    @@media (max-width: 768px) {
        .table-responsive-full {
            border-radius: 0;
        }
        
        .sticky-left-2 {
            left: 60px;
        }
        
        .compact-cell {
            padding: 8px 10px;
            font-size: 12px;
        }
        
        .roll-direction-thumb {
            width: 35px;
            height: 35px;
        }
    }
</style>

@section Scripts {
    <script>
        // Clear search button
        document.getElementById('clearSearch')?.addEventListener('click', function() {
            window.location.href = '@Url.Action("Index")';
        });

        // Auto-submit on clear
        document.getElementById('searchInput')?.addEventListener('input', function(e) {
            if (e.target.value === '') {
                const clearBtn = document.getElementById('clearSearch');
                if (clearBtn) {
                    clearBtn.style.display = 'none';
                }
            }
        });

        // Delete confirmation
        function confirmDelete(orderId, orderNumber) {
            document.getElementById('deleteOrderNumber').textContent = orderNumber;
            const form = document.getElementById('deleteForm');
            form.action = '@Url.Action("Delete", "PrintOrders")' + '/' + orderId;
            document.getElementById('deleteModal').style.display = 'flex';
        }

        function closeDeleteModal() {
            document.getElementById('deleteModal').style.display = 'none';
        }

        // Close modal on Escape key
        document.addEventListener('keydown', function(e) {
            if (e.key === 'Escape') {
                closeDeleteModal();
            }
        });

        // Close modal on outside click
        document.getElementById('deleteModal')?.addEventListener('click', function(e) {
            if (e.target === this) {
                closeDeleteModal();
            }
        });

        // Cancel order functions
        function showCancelModal(orderId, orderNumber) {
            document.getElementById('cancelOrderNumber').textContent = orderNumber;
            document.getElementById('cancelOrderId').value = orderId;
            document.getElementById('cancelReason').value = '';
            document.getElementById('cancelModal').style.display = 'flex';
            document.getElementById('cancelReason').focus();
        }

        function closeCancelModal() {
            document.getElementById('cancelModal').style.display = 'none';
        }

        // Close cancel modal on Escape key
        document.addEventListener('keydown', function(e) {
            if (e.key === 'Escape') {
                closeCancelModal();
            }
        });

        // Close cancel modal on outside click
        document.getElementById('cancelModal')?.addEventListener('click', function(e) {
            if (e.target === this) {
                closeCancelModal();
            }
        });
    </script>
}