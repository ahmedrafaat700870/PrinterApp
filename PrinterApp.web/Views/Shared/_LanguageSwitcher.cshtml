@using Microsoft.AspNetCore.Localization
@inject Microsoft.Extensions.Localization.IStringLocalizer<SharedResources> Localizer

@{
    var requestCulture = Context.Features.Get<IRequestCultureFeature>();
    var currentCulture = requestCulture?.RequestCulture.Culture.Name ?? "en";
    var returnUrl = Context.Request.Path + Context.Request.QueryString;
}

<div class="language-switcher">
    <form asp-controller="Settings" asp-action="SetLanguage" method="post" style="display: inline;">
        <input type="hidden" name="returnUrl" value="@returnUrl" />
        <button type="submit"
                name="culture"
                value="en"
                class="language-btn @(currentCulture == "en" ? "active" : "")"
                title="@Localizer["English"]">
            🇬🇧 EN
        </button>
        <button type="submit"
                name="culture"
                value="ar"
                class="language-btn @(currentCulture == "ar" ? "active" : "")"
                title="@Localizer["Arabic"]">
            🇸🇦 AR
        </button>
    </form>
</div>

<style>
    .language-switcher {
        display: inline-flex;
        gap: 5px;
        align-items: center;
    }

    .language-btn {
        background: transparent;
        border: 2px solid var(--border-color);
        padding: 5px 12px;
        border-radius: var(--border-radius);
        cursor: pointer;
        transition: all 0.3s ease;
        font-weight: 500;
        color: var(--text-primary);
    }

        .language-btn:hover {
            background: var(--primary-light);
            border-color: var(--primary-color);
            color: var(--white);
            transform: translateY(-2px);
        }

        .language-btn.active {
            background: var(--primary-gradient);
            border-color: var(--primary-color);
            color: var(--white);
            box-shadow: 0 4px 15px rgba(99, 102, 241, 0.3);
        }
</style>