@* @model PrinterApp.Models.ViewModels.MoldShapeViewModel
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer

@{
    ViewData["Title"] = Localizer["Create"] + " " + Localizer["MoldShape"];
}

<div class="content-container">
    <div class="page-header">
        <h2>➕ @Localizer["Create"] @Localizer["MoldShape"]</h2>
        <a asp-action="Index" class="btn-secondary-custom">
            ← @Localizer["BackToList"]
        </a>
    </div>

    <div class="card-custom">
        <div class="card-header-custom">
            <h2>@Localizer["MoldShape"] @Localizer["Description"]</h2>
        </div>
        <div class="card-body-custom">
            <form asp-action="Create" method="post" enctype="multipart/form-data">
                @Html.AntiForgeryToken()

                @if (!ViewData.ModelState.IsValid)
                {
                    <div class="validation-summary">
                        <div asp-validation-summary="All"></div>
                    </div>
                }

                <div class="form-group-custom">
                    <label asp-for="ShapeName" class="form-label-custom"></label>
                    <input asp-for="ShapeName" class="form-control-custom" placeholder="@Localizer["MoldShapeName"]" />
                    <span asp-validation-for="ShapeName" class="text-danger-custom"></span>
                </div>

                <div class="form-group-custom">
                    <label asp-for="ShapeImage" class="form-label-custom">
                        @Localizer["ShapeImage"] <small style="color: var(--medium-gray);">(@Localizer["Optional"])</small>
                    </label>
                    <input asp-for="ShapeImage"
                           type="file"
                           class="form-control-custom"
                           accept="image/*"
                           onchange="previewImage(this)" />
                    <span asp-validation-for="ShapeImage" class="text-danger-custom"></span>
                    <small style="color: var(--medium-gray); margin-top: 5px; display: block;">
                        💡 Allowed formats: JPG, JPEG, PNG, GIF, BMP (Max size: 5MB)
                    </small>
                </div>

                <!-- Image Preview -->
                <div id="imagePreview" class="form-group-custom" style="display: none;">
                    <label class="form-label-custom">@Localizer["ImagePreview"]:</label>
                    <div style="text-align: center; padding: 20px; background: var(--input-bg); border-radius: var(--border-radius);">
                        <img id="previewImg" style="max-width: 300px; max-height: 300px; border-radius: var(--border-radius); border: 2px solid var(--border-color);" />
                    </div>
                </div>

                <div class="form-group-custom">
                    <label asp-for="Description" class="form-label-custom"></label>
                    <textarea asp-for="Description" class="form-control-custom" rows="4" placeholder="@Localizer["Description"]"></textarea>
                    <span asp-validation-for="Description" class="text-danger-custom"></span>
                </div>

                <div class="action-buttons" style="margin-top: 30px;">
                    <button type="submit" class="btn-success-custom">
                        💾 @Localizer["Create"]
                    </button>
                    <a asp-action="Index" class="btn-secondary-custom">
                        @Localizer["Cancel"]
                    </a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        function previewImage(input) {
            const preview = document.getElementById('imagePreview');
            const previewImg = document.getElementById('previewImg');

            if (input.files && input.files[0]) {
                const reader = new FileReader();

                reader.onload = function(e) {
                    previewImg.src = e.target.result;
                    preview.style.display = 'block';
                };

                reader.readAsDataURL(input.files[0]);
            } else {
                preview.style.display = 'none';
            }
        }

        // Auto-focus on shape name
        document.addEventListener('DOMContentLoaded', function() {
            const shapeNameInput = document.querySelector('input[name="ShapeName"]');
            if (shapeNameInput) {
                shapeNameInput.focus();
            }
        });
    </script>
} *@

@model PrinterApp.Models.ViewModels.MoldShapeViewModel

@{
    ViewData["Title"] = Lang.GetText("CreateMoldShape");
}

<div class="content-container">
    <div class="page-header">
        <h2>➕ @Lang.GetText("CreateMoldShape")</h2>
        <a asp-action="Index" class="btn-secondary-custom">
            ← @Lang.GetText("BackToList")
        </a>
    </div>

    <div class="card-custom">
        <div class="card-header-custom">
            <h2>🔷 @Lang.GetText("MoldShapeInformation")</h2>
        </div>
        <div class="card-body-custom">
            <form asp-action="Create" method="post" enctype="multipart/form-data">
                @Html.AntiForgeryToken()

                @if (!ViewData.ModelState.IsValid)
                {
                    <div class="validation-summary">
                        <div asp-validation-summary="All"></div>
                    </div>
                }

                <div class="form-group-custom">
                    <label asp-for="ShapeName" class="form-label-custom">@Lang.GetText("MoldShapeName")</label>
                    <input asp-for="ShapeName" class="form-control-custom" placeholder="@Lang.GetText("EnterMoldShapeName")" />
                    <span asp-validation-for="ShapeName" class="text-danger-custom"></span>
                </div>

                <div class="form-group-custom">
                    <label asp-for="ShapeImage" class="form-label-custom">
                        @Lang.GetText("ShapeImage") <small style="color: var(--medium-gray);">(@Lang.GetText("Optional"))</small>
                    </label>
                    <input asp-for="ShapeImage"
                           type="file"
                           class="form-control-custom"
                           accept="image/*"
                           onchange="previewImage(this)" />
                    <span asp-validation-for="ShapeImage" class="text-danger-custom"></span>
                    <small style="color: var(--medium-gray); margin-top: 5px; display: block;">
                        💡 @Lang.GetText("ImageFormatInfo")
                    </small>
                </div>

                <!-- Image Preview -->
                <div id="imagePreview" class="form-group-custom" style="display: none;">
                    <label class="form-label-custom">@Lang.GetText("ImagePreview"):</label>
                    <div style="text-align: center; padding: 20px; background: var(--input-bg); border-radius: var(--border-radius);">
                        <img id="previewImg" style="max-width: 300px; max-height: 300px; border-radius: var(--border-radius); border: 2px solid var(--border-color);" />
                    </div>
                </div>

                <div class="form-group-custom">
                    <label asp-for="Description" class="form-label-custom">@Lang.GetText("Description")</label>
                    <textarea asp-for="Description" class="form-control-custom" rows="4" placeholder="@Lang.GetText("EnterDescription")"></textarea>
                    <span asp-validation-for="Description" class="text-danger-custom"></span>
                </div>

                <!-- Info Box -->
                <div style="background: var(--input-bg); padding: 20px; border-radius: var(--border-radius); border-left: 4px solid var(--info-color); margin-bottom: 20px;">
                    <h4 style="margin: 0 0 10px 0; color: var(--info-color); font-size: 16px;">
                        💡 @Lang.GetText("ImportantNotes")
                    </h4>
                    <ul style="margin: 0; padding-left: 20px; color: var(--medium-gray); line-height: 1.8;">
                        <li>@Lang.GetText("MoldShapeNameMustBeUnique")</li>
                        <li>@Lang.GetText("ShapeImageHelpsIdentification")</li>
                        <li>@Lang.GetText("DescriptionIsOptionalButRecommended")</li>
                    </ul>
                </div>

                <div class="action-buttons" style="margin-top: 30px;">
                    <button type="submit" class="btn-success-custom">
                        💾 @Lang.GetText("Create")
                    </button>
                    <a asp-action="Index" class="btn-secondary-custom">
                        @Lang.GetText("Cancel")
                    </a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        function previewImage(input) {
            const preview = document.getElementById('imagePreview');
            const previewImg = document.getElementById('previewImg');

            if (input.files && input.files[0]) {
                const reader = new FileReader();

                reader.onload = function(e) {
                    previewImg.src = e.target.result;
                    preview.style.display = 'block';
                };

                reader.readAsDataURL(input.files[0]);
            } else {
                preview.style.display = 'none';
            }
        }

        // Auto-focus on shape name
        document.addEventListener('DOMContentLoaded', function() {
            const shapeNameInput = document.querySelector('input[name="ShapeName"]');
            if (shapeNameInput) {
                shapeNameInput.focus();
            }
        });
    </script>
}