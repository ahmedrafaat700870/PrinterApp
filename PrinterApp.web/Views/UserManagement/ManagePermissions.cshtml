@* @model UserPermissionsViewModel

@{
    ViewData["Title"] = "Manage User Permissions";
}

<div class="content-container">
    <div class="page-header">
        <h2>🔐 Manage User Permissions</h2>
        <a asp-action="Index" class="btn-secondary-custom">
            ← Back to Users
        </a>
    </div>

    <div class="card-custom">
        <div class="card-header-custom">
            <h2>User: @Model.FullName</h2>
        </div>
        <div class="card-body-custom">
            @if (!ViewData.ModelState.IsValid)
            {
                <div class="validation-summary">
                    <div asp-validation-summary="All"></div>
                </div>
            }

            <form asp-action="ManagePermissions" method="post">
                <input type="hidden" name="userId" value="@Model.UserId" />

                <div class="form-group-custom">
                    <label class="form-label-custom">Email</label>
                    <input type="text" class="form-control-custom" value="@Model.Email" readonly />
                </div>

                <div style="margin-top: 30px; margin-bottom: 20px;">
                    <h4 style="color: var(--text-primary); margin-bottom: 15px;">
                        Select Permissions and Roles
                    </h4>
                    <p style="color: var(--medium-gray); margin-bottom: 20px;">
                        Choose which permissions and specific roles this user should have
                    </p>
                </div>

                @if (Model.Permissions.Any())
                {
                    <div style="display: flex; flex-direction: column; gap: 20px;">
                        @for (int i = 0; i < Model.Permissions.Count; i++)
                        {
                            var permission = Model.Permissions[i];

                            <div style="background: var(--input-bg); padding: 20px; border-radius: var(--border-radius-lg); border: 2px solid var(--border-color);">
                                <!-- Permission Header -->
                                <div style="margin-bottom: 15px; padding-bottom: 15px; border-bottom: 2px solid var(--border-color);">
                                    <h5 style="color: var(--text-primary); margin: 0; font-size: 18px;">
                                        🛡️ @permission.PermissionName
                                    </h5>
                                    <div style="margin-top: 5px;">
                                        <code style="background: var(--white); padding: 3px 8px; border-radius: var(--border-radius-sm); font-size: 12px; color: var(--text-secondary);">
                                            @permission.PermissionCode
                                        </code>
                                    </div>
                                    @if (!string.IsNullOrEmpty(permission.Description))
                                    {
                                        <p style="color: var(--medium-gray); margin: 10px 0 0 0; font-size: 14px;">
                                            @permission.Description
                                        </p>
                                    }
                                </div>

                                <!-- Roles Checkboxes -->
                                @if (permission.Roles.Any())
                                {
                                    <div style="display: grid; grid-template-columns: repeat(auto-fill, minmax(200px, 1fr)); gap: 10px;">
                                        @for (int j = 0; j < permission.Roles.Count; j++)
                                        {
                                            var role = permission.Roles[j];
                                            var checkboxId = $"permission_{permission.PermissionId}_role_{role.PermissionRoleId}";

                                            <div class="form-check-custom" style="background: var(--white); padding: 12px; border-radius: var(--border-radius); margin: 0;">
                                                <input type="checkbox"
                                                       name="permissionRoles[@permission.PermissionId]"
                                                       value="@role.PermissionRoleId"
                                                       class="form-check-input-custom"
                                                       id="@checkboxId"
                                                       @(role.IsGranted ? "checked" : "") />
                                                <label for="@checkboxId" class="form-check-label-custom" style="cursor: pointer; margin: 0;">
                                                    <div>
                                                        <strong style="color: var(--text-primary); font-size: 14px;">
                                                            @role.RoleName
                                                        </strong>
                                                    </div>
                                                    @if (!string.IsNullOrEmpty(role.Description))
                                                    {
                                                        <div style="color: var(--medium-gray); font-size: 12px; margin-top: 3px;">
                                                            @role.Description
                                                        </div>
                                                    }
                                                </label>
                                            </div>
                                        }
                                    </div>
                                }
                                else
                                {
                                    <div style="background: var(--white); padding: 15px; border-radius: var(--border-radius); text-align: center;">
                                        <p style="color: var(--medium-gray); margin: 0;">
                                            ⚠️ No roles defined for this permission
                                        </p>
                                    </div>
                                }
                            </div>
                        }
                    </div>
                }
                else
                {
                    <div class="alert-custom alert-info-custom">
                        No permissions available. Please create permissions first.
                    </div>
                }

                <div class="action-buttons" style="margin-top: 30px;">
                    <button type="submit" class="btn-success-custom">
                        💾 Save Permissions
                    </button>
                    <a asp-action="Index" class="btn-secondary-custom">
                        ← Back to List
                    </a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        // إضافة Select All functionality لكل صلاحية
        document.addEventListener('DOMContentLoaded', function() {
            // يمكنك إضافة زر "Select All" لكل صلاحية إذا أردت
        });
    </script>
} *@

@model UserPermissionsViewModel

@{
    ViewData["Title"] = Lang.GetText("ManageUserPermissions");
}

<div class="content-container">
    <div class="page-header">
        <h2>🔐 @Lang.GetText("ManageUserPermissions")</h2>
        <a asp-action="Index" class="btn-secondary-custom">
            ← @Lang.GetText("BackToUsers")
        </a>
    </div>

    <div class="card-custom">
        <div class="card-header-custom">
            <div style="display: flex; align-items: center; gap: 15px;">
                <div style="width: 60px; height: 60px; border-radius: 50%; background: var(--primary-gradient); display: flex; align-items: center; justify-content: center; color: var(--white); font-weight: bold; font-size: 24px;">
                    @Model.FullName.Substring(0, 1).ToUpper()
                </div>
                <div>
                    <h2 style="margin: 0;">@Lang.GetText("User"): @Model.FullName</h2>
                    <small style="color: var(--medium-gray);">@Lang.GetText("ManageUserPermissionsDescription")</small>
                </div>
            </div>
        </div>
        <div class="card-body-custom">
            @if (!ViewData.ModelState.IsValid)
            {
                <div class="validation-summary">
                    <div asp-validation-summary="All"></div>
                </div>
            }

            <form asp-action="ManagePermissions" method="post">
                @Html.AntiForgeryToken()
                <input type="hidden" name="userId" value="@Model.UserId" />

                <!-- User Information -->
                <div style="background: var(--input-bg); padding: 20px; border-radius: var(--border-radius); margin-bottom: 25px; border-left: 4px solid var(--primary-color);">
                    <h3 style="margin: 0 0 15px 0; color: var(--primary-color); font-size: 18px;">
                        📋 @Lang.GetText("UserInformation")
                    </h3>
                    <div class="form-group-custom" style="margin-bottom: 0;">
                        <label class="form-label-custom">@Lang.GetText("Email")</label>
                        <div style="position: relative;">
                            <span style="position: absolute; left: 12px; top: 50%; transform: translateY(-50%); color: var(--primary-color); font-size: 16px;">📧</span>
                            <input type="text" class="form-control-custom" value="@Model.Email" readonly style="padding-left: 40px; background: var(--input-bg); cursor: not-allowed;" />
                        </div>
                    </div>
                </div>

                <!-- Permissions Header -->
                <div style="margin-top: 30px; margin-bottom: 20px;">
                    <h4 style="color: var(--text-primary); margin-bottom: 10px; font-size: 20px;">
                        🛡️ @Lang.GetText("SelectPermissionsAndRoles")
                    </h4>
                    <p style="color: var(--medium-gray); margin-bottom: 20px;">
                        @Lang.GetText("ChoosePermissionsDescription")
                    </p>

                    <!-- Quick Actions -->
                    <div style="display: flex; gap: 10px; flex-wrap: wrap; margin-bottom: 20px;">
                        <button type="button" onclick="selectAllPermissions(true)" class="btn-success-custom btn-sm-custom">
                            ✓ @Lang.GetText("SelectAll")
                        </button>
                        <button type="button" onclick="selectAllPermissions(false)" class="btn-secondary-custom btn-sm-custom">
                            ✗ @Lang.GetText("DeselectAll")
                        </button>
                    </div>
                </div>

                @if (Model.Permissions.Any())
                {
                    <!-- Statistics -->
                    <div style="background: var(--input-bg); padding: 15px; border-radius: var(--border-radius); margin-bottom: 20px;">
                        <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(150px, 1fr)); gap: 15px;">
                            <div style="text-align: center;">
                                <div style="font-size: 24px; font-weight: bold; color: var(--primary-color);" id="totalPermissions">
                                    @Model.Permissions.Count
                                </div>
                                <div style="color: var(--medium-gray); font-size: 13px; margin-top: 5px;">
                                    @Lang.GetText("TotalPermissions")
                                </div>
                            </div>
                            <div style="text-align: center;">
                                <div style="font-size: 24px; font-weight: bold; color: var(--success-color);" id="selectedCount">
                                    @Model.Permissions.Sum(p => p.Roles.Count(r => r.IsGranted))
                                </div>
                                <div style="color: var(--medium-gray); font-size: 13px; margin-top: 5px;">
                                    @Lang.GetText("SelectedPermissions")
                                </div>
                            </div>
                            <div style="text-align: center;">
                                <div style="font-size: 24px; font-weight: bold; color: var(--info-color);" id="totalRoles">
                                    @Model.Permissions.Sum(p => p.Roles.Count)
                                </div>
                                <div style="color: var(--medium-gray); font-size: 13px; margin-top: 5px;">
                                    @Lang.GetText("TotalRoles")
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Permissions List -->
                    <div style="display: flex; flex-direction: column; gap: 20px;">
                        @for (int i = 0; i < Model.Permissions.Count; i++)
                        {
                            var permission = Model.Permissions[i];
                            var selectedRolesCount = permission.Roles.Count(r => r.IsGranted);

                            <div style="background: var(--input-bg); padding: 20px; border-radius: var(--border-radius-lg); border: 2px solid @(selectedRolesCount > 0 ? "var(--success-color)" : "var(--border-color)"); transition: all 0.3s ease;">
                                <!-- Permission Header -->
                                <div style="margin-bottom: 15px; padding-bottom: 15px; border-bottom: 2px solid var(--border-color); display: flex; justify-content: space-between; align-items: start;">
                                    <div style="flex: 1;">
                                        <div style="display: flex; align-items: center; gap: 10px; margin-bottom: 8px;">
                                            <h5 style="color: var(--text-primary); margin: 0; font-size: 18px;">
                                                🛡️ @permission.PermissionName
                                            </h5>
                                            @if (selectedRolesCount > 0)
                                            {
                                                <span style="background: var(--success-color); color: var(--white); padding: 2px 8px; border-radius: var(--border-radius-sm); font-size: 12px; font-weight: 500;">
                                                    @selectedRolesCount / @permission.Roles.Count
                                                </span>
                                            }
                                        </div>
                                        <div style="margin-top: 5px;">
                                            <code style="background: var(--white); padding: 3px 8px; border-radius: var(--border-radius-sm); font-size: 12px; color: var(--text-secondary);">
                                                @permission.PermissionCode
                                            </code>
                                        </div>
                                        @if (!string.IsNullOrEmpty(permission.Description))
                                        {
                                            <p style="color: var(--medium-gray); margin: 10px 0 0 0; font-size: 14px;">
                                                @permission.Description
                                            </p>
                                        }
                                    </div>
                                    <div style="display: flex; gap: 5px;">
                                        <button type="button"
                                                onclick="togglePermissionRoles(@permission.PermissionId, true)"
                                                class="btn-success-custom btn-sm-custom"
                                                style="font-size: 11px; padding: 5px 10px;">
                                            ✓
                                        </button>
                                        <button type="button"
                                                onclick="togglePermissionRoles(@permission.PermissionId, false)"
                                                class="btn-secondary-custom btn-sm-custom"
                                                style="font-size: 11px; padding: 5px 10px;">
                                            ✗
                                        </button>
                                    </div>
                                </div>

                                <!-- Roles Checkboxes -->
                                @if (permission.Roles.Any())
                                {
                                    <div style="display: grid; grid-template-columns: repeat(auto-fill, minmax(250px, 1fr)); gap: 10px;">
                                        @for (int j = 0; j < permission.Roles.Count; j++)
                                        {
                                            var role = permission.Roles[j];
                                            var checkboxId = $"permission_{permission.PermissionId}_role_{role.PermissionRoleId}";

                                            <div class="form-check-custom"
                                                 data-permission-id="@permission.PermissionId"
                                                 style="background: var(--white); padding: 12px; border-radius: var(--border-radius); margin: 0; border: 2px solid @(role.IsGranted ? "var(--success-color)" : "var(--border-color)"); transition: all 0.3s ease;">
                                                <input type="checkbox"
                                                       name="permissionRoles[@permission.PermissionId]"
                                                       value="@role.PermissionRoleId"
                                                       class="form-check-input-custom permission-checkbox"
                                                       data-permission-id="@permission.PermissionId"
                                                       id="@checkboxId"
                                                       onchange="updatePermissionBorder(this)"
                                                       @(role.IsGranted ? "checked" : "") />
                                                <label for="@checkboxId" class="form-check-label-custom" style="cursor: pointer; margin: 0;">
                                                    <div>
                                                        <strong style="color: var(--text-primary); font-size: 14px;">
                                                            @if (role.RoleName.Contains("View") || role.RoleName.Contains("عرض"))
                                                            {
                                                                <text>👁️ @role.RoleName</text>
                                                            }
                                                            else if (role.RoleName.Contains("Create") || role.RoleName.Contains("إنشاء"))
                                                            {
                                                                <text>➕ @role.RoleName</text>
                                                            }
                                                            else if (role.RoleName.Contains("Edit") || role.RoleName.Contains("تعديل"))
                                                            {
                                                                <text>✏️ @role.RoleName</text>
                                                            }
                                                            else if (role.RoleName.Contains("Delete") || role.RoleName.Contains("حذف"))
                                                            {
                                                                <text>🗑️ @role.RoleName</text>
                                                            }
                                                            else
                                                            {
                                                                <text>@role.RoleName</text>
                                                            }
                                                        </strong>
                                                    </div>
                                                    @if (!string.IsNullOrEmpty(role.Description))
                                                    {
                                                        <div style="color: var(--medium-gray); font-size: 12px; margin-top: 3px;">
                                                            @role.Description
                                                        </div>
                                                    }
                                                </label>
                                            </div>
                                        }
                                    </div>
                                }
                                else
                                {
                                    <div style="background: var(--white); padding: 15px; border-radius: var(--border-radius); text-align: center;">
                                        <p style="color: var(--medium-gray); margin: 0;">
                                            ⚠️ @Lang.GetText("NoRolesDefinedForPermission")
                                        </p>
                                    </div>
                                }
                            </div>
                        }
                    </div>
                }
                else
                {
                    <div class="alert-custom alert-warning-custom">
                        <div style="display: flex; align-items: center; gap: 10px;">
                            <span style="font-size: 24px;">⚠️</span>
                            <div>
                                <strong>@Lang.GetText("NoPermissionsAvailable")</strong>
                                <p style="margin: 5px 0 0 0;">@Lang.GetText("PleaseCreatePermissionsFirst")</p>
                            </div>
                        </div>
                    </div>
                }

                <div class="action-buttons" style="margin-top: 30px;">
                    <button type="submit" class="btn-success-custom">
                        💾 @Lang.GetText("SavePermissions")
                    </button>
                    <a asp-action="Index" class="btn-secondary-custom">
                        @Lang.GetText("Cancel")
                    </a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        // Select/Deselect all permissions
        function selectAllPermissions(select) {
            const checkboxes = document.querySelectorAll('.permission-checkbox');
            checkboxes.forEach(checkbox => {
                checkbox.checked = select;
                updatePermissionBorder(checkbox);
            });
            updateStatistics();
        }

        // Toggle roles for a specific permission
        function togglePermissionRoles(permissionId, select) {
            const checkboxes = document.querySelectorAll(`.permission-checkbox[data-permission-id="${permissionId}"]`);
            checkboxes.forEach(checkbox => {
                checkbox.checked = select;
                updatePermissionBorder(checkbox);
            });
            updateStatistics();
        }

        // Update border color for checkbox container
        function updatePermissionBorder(checkbox) {
            const container = checkbox.closest('.form-check-custom');
            if (container) {
                container.style.borderColor = checkbox.checked ? 'var(--success-color)' : 'var(--border-color)';
            }

            // Update permission card border
            const permissionId = checkbox.dataset.permissionId;
            const permissionCard = checkbox.closest('[style*="border: 2px solid"]');
            if (permissionCard) {
                const selectedCount = document.querySelectorAll(`.permission-checkbox[data-permission-id="${permissionId}"]:checked`).length;
                permissionCard.style.borderColor = selectedCount > 0 ? 'var(--success-color)' : 'var(--border-color)';
            }

            updateStatistics();
        }

        // Update statistics
        function updateStatistics() {
            const totalSelected = document.querySelectorAll('.permission-checkbox:checked').length;
            const selectedCountElement = document.getElementById('selectedCount');
            if (selectedCountElement) {
                selectedCountElement.textContent = totalSelected;
            }
        }

        // Initialize on page load
        document.addEventListener('DOMContentLoaded', function() {
            // Add change event to all checkboxes
            const checkboxes = document.querySelectorAll('.permission-checkbox');
            checkboxes.forEach(checkbox => {
                checkbox.addEventListener('change', function() {
                    updatePermissionBorder(this);
                });
            });
        });
    </script>
}