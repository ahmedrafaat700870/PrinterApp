@* @model IEnumerable<PrinterApp.Models.ViewModels.RollDirectionViewModel>

@{
    ViewData["Title"] = "Roll Directions Management";
    var currentFilter = ViewData["CurrentFilter"] as string;
}

<div class="content-container">
    <div class="page-header">
        <h2>🔄 Roll Directions Management</h2>
        <a asp-action="Create" class="btn-primary-custom">
            ➕ Add New Direction
        </a>
    </div>

    @if (TempData["Success"] != null)
    {
        <div class="alert-custom alert-success-custom">
            ✓ @TempData["Success"]
        </div>
    }

    @if (TempData["Error"] != null)
    {
        <div class="alert-custom alert-error-custom">
            ✗ @TempData["Error"]
        </div>
    }

    <!-- Search Bar -->
    <div class="card-custom" style="margin-bottom: 20px;">
        <div style="padding: 20px;">
            <form asp-action="Index" method="get" id="searchForm">
                <div style="display: flex; gap: 10px; align-items: center;">
                    <div style="flex: 1; position: relative;">
                        <input type="text"
                               name="searchTerm"
                               id="searchInput"
                               value="@currentFilter"
                               class="form-control-custom"
                               placeholder="🔍 Search by direction number or description..."
                               style="padding-right: 100px;" />

                        @if (!string.IsNullOrEmpty(currentFilter))
                        {
                            <button type="button"
                                    id="clearSearch"
                                    style="position: absolute; right: 10px; top: 50%; transform: translateY(-50%); background: transparent; border: none; color: var(--danger-color); cursor: pointer; font-size: 20px; padding: 5px 10px;"
                                    title="Clear search">
                                ✕
                            </button>
                        }
                    </div>

                    <button type="submit" class="btn-primary-custom" style="white-space: nowrap;">
                        🔍 Search
                    </button>

                    @if (!string.IsNullOrEmpty(currentFilter))
                    {
                        <a asp-action="Index" class="btn-secondary-custom" style="white-space: nowrap;">
                            🔄 Reset
                        </a>
                    }
                </div>
            </form>

            @if (!string.IsNullOrEmpty(currentFilter))
            {
                <div style="margin-top: 15px; padding: 10px; background: var(--primary-light); color: var(--white); border-radius: var(--border-radius); display: flex; justify-content: space-between; align-items: center;">
                    <span>
                        🔍 Searching for: <strong>"@currentFilter"</strong> - Found <strong>@Model.Count()</strong> result(s)
                    </span>
                </div>
            }
        </div>
    </div>

    <!-- Statistics -->
    @if (Model.Any())
    {
        <div class="card-custom" style="margin-bottom: 20px;">
            <div style="padding: 15px; background: var(--input-bg); border-radius: var(--border-radius);">
                <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(150px, 1fr)); gap: 20px;">
                    <div style="text-align: center;">
                        <div style="font-size: 28px; font-weight: bold; color: var(--primary-color);">
                            @Model.Count()
                        </div>
                        <div style="color: var(--medium-gray); font-size: 14px; margin-top: 5px;">
                            Total Directions
                        </div>
                    </div>
                    <div style="text-align: center;">
                        <div style="font-size: 28px; font-weight: bold; color: var(--success-color);">
                            @Model.Count(d => d.IsActive)
                        </div>
                        <div style="color: var(--medium-gray); font-size: 14px; margin-top: 5px;">
                            Active Directions
                        </div>
                    </div>
                    <div style="text-align: center;">
                        <div style="font-size: 28px; font-weight: bold; color: var(--danger-color);">
                            @Model.Count(d => !d.IsActive)
                        </div>
                        <div style="color: var(--medium-gray); font-size: 14px; margin-top: 5px;">
                            Inactive Directions
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

    <!-- Table -->
    @if (Model.Any())
    {
        <div class="card-custom">
            <table class="table-custom">
                <thead>
                    <tr>
                        <th style="width: 80px;">Direction #</th>
                        <th style="width: 150px;">Image</th>
                        <th>Description</th>
                        <th>Status</th>
                        <th>Created Date</th>
                        <th style="text-align: center; width: 250px;">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr style="@(item.IsActive ? "" : "opacity: 0.6; background-color: #f5f5f5;")">
                            <td>
                                <span style="background: var(--primary-gradient); color: var(--white); padding: 8px 15px; border-radius: var(--border-radius); font-weight: bold; font-size: 16px; display: inline-block;">
                                    @item.DirectionNumber
                                </span>
                            </td>
                            <td>
                                @if (!string.IsNullOrEmpty(item.DirectionImage))
                                {
                                    <img src="@item.DirectionImage"
                                         alt="Direction @item.DirectionNumber"
                                         style="width: 100px; height: 100px; object-fit: cover; border-radius: var(--border-radius); border: 2px solid var(--border-color); cursor: pointer;"
                                         onclick="showImageModal('@item.DirectionImage', 'Direction @item.DirectionNumber')" />
                                }
                                else
                                {
                                    <div style="width: 100px; height: 100px; background: var(--input-bg); border-radius: var(--border-radius); display: flex; align-items: center; justify-content: center; border: 2px dashed var(--border-color);">
                                        <span style="color: var(--medium-gray); font-size: 12px;">No Image</span>
                                    </div>
                                }
                            </td>
                            <td>
                                @if (!string.IsNullOrEmpty(item.Description))
                                {
                                    <span>@item.Description</span>
                                }
                                else
                                {
                                    <span style="color: var(--medium-gray); font-style: italic;">No description</span>
                                }
                            </td>
                            <td>
                                @if (item.IsActive)
                                {
                                    <span style="background: var(--success-color); color: var(--white); padding: 5px 12px; border-radius: var(--border-radius-sm); font-size: 12px; font-weight: 500;">
                                        ✓ Active
                                    </span>
                                }
                                else
                                {
                                    <span style="background: var(--danger-color); color: var(--white); padding: 5px 12px; border-radius: var(--border-radius-sm); font-size: 12px; font-weight: 500;">
                                        ✗ Inactive
                                    </span>
                                }
                            </td>
                            <td>@item.CreatedDate.ToString("MMM dd, yyyy")</td>
                            <td style="text-align: center;">
                                <div class="action-buttons" style="justify-content: center;">
                                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn-warning-custom btn-sm-custom">
                                        ✏️ Edit
                                    </a>

                                    <form asp-action="ToggleStatus" asp-route-id="@item.Id" method="post" style="display:inline;">
                                        <button type="submit" class="@(item.IsActive ? "btn-secondary-custom" : "btn-success-custom") btn-sm-custom">
                                            @(item.IsActive ? "🔒 Deactivate" : "✓ Activate")
                                        </button>
                                    </form>

                                    <form asp-action="Delete" asp-route-id="@item.Id" method="post" style="display:inline;">
                                        <button type="submit" class="btn-danger-custom btn-sm-custom"
                                                onclick="return confirm('Are you sure you want to delete this roll direction?')">
                                            🗑️ Delete
                                        </button>
                                    </form>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    else
    {
        <div class="card-custom">
            <div class="empty-state">
                <div class="empty-state-icon">🔄</div>
                <h3 style="color: var(--medium-gray);">
                    @if (!string.IsNullOrEmpty(currentFilter))
                    {
                        <text>No Directions Found</text>
                    }
                    else
                    {
                        <text>No Roll Directions Available</text>
                    }
                </h3>
                <p style="color: var(--medium-gray);">
                    @if (!string.IsNullOrEmpty(currentFilter))
                    {
                        <text>Try adjusting your search criteria</text>
                    }
                    else
                    {
                        <text>Start by adding your first roll direction</text>
                    }
                </p>
                @if (string.IsNullOrEmpty(currentFilter))
                {
                    <a asp-action="Create" class="btn-primary-custom" style="margin-top: 20px;">
                        ➕ Add New Direction
                    </a>
                }
                else
                {
                    <a asp-action="Index" class="btn-secondary-custom" style="margin-top: 20px;">
                        🔄 Clear Search
                    </a>
                }
            </div>
        </div>
    }
</div>

<!-- Image Modal -->
<div id="imageModal" style="display: none; position: fixed; z-index: 9999; left: 0; top: 0; width: 100%; height: 100%; background-color: rgba(0,0,0,0.9);" onclick="closeImageModal()">
    <span style="position: absolute; top: 20px; right: 40px; color: #f1f1f1; font-size: 40px; font-weight: bold; cursor: pointer;">&times;</span>
    <img id="modalImage" style="margin: auto; display: block; max-width: 90%; max-height: 90%; margin-top: 50px;">
    <div id="modalCaption" style="text-align: center; color: #ccc; padding: 10px; font-size: 20px;"></div>
</div>

@section Scripts {
    <script>
        // Search functionality
        let searchTimeout;
        const searchInput = document.getElementById('searchInput');
        const searchForm = document.getElementById('searchForm');
        const clearSearchBtn = document.getElementById('clearSearch');

        if (searchInput) {
            searchInput.addEventListener('input', function() {
                clearTimeout(searchTimeout);
                searchTimeout = setTimeout(function() {
                    if (searchInput.value.length >= 1 || searchInput.value.length === 0) {
                        searchForm.submit();
                    }
                }, 500);
            });
            searchInput.focus();
        }

        if (clearSearchBtn) {
            clearSearchBtn.addEventListener('click', function() {
                searchInput.value = '';
                searchForm.submit();
            });
        }

        // Image Modal
        function showImageModal(imageSrc, caption) {
            const modal = document.getElementById('imageModal');
            const modalImg = document.getElementById('modalImage');
            const modalCaption = document.getElementById('modalCaption');

            modal.style.display = 'block';
            modalImg.src = imageSrc;
            modalCaption.innerHTML = caption;
        }

        function closeImageModal() {
            document.getElementById('imageModal').style.display = 'none';
        }

        // Close modal with ESC key
        document.addEventListener('keydown', function(e) {
            if (e.key === 'Escape') {
                closeImageModal();
            }
        });
    </script>
} *@

@model IEnumerable<PrinterApp.Models.ViewModels.RollDirectionViewModel>

@{
    ViewData["Title"] = Lang.GetText("RollDirectionsManagement");
    var currentFilter = ViewData["CurrentFilter"] as string;
}

<div class="content-container">
    <div class="page-header">
        <h2>🔄 @Lang.GetText("RollDirectionsManagement")</h2>
        <a asp-action="Create" class="btn-primary-custom">
            ➕ @Lang.GetText("AddNewDirection")
        </a>
    </div>

    @if (TempData["Success"] != null)
    {
        <div class="alert-custom alert-success-custom">
            ✓ @TempData["Success"]
        </div>
    }

    @if (TempData["Error"] != null)
    {
        <div class="alert-custom alert-error-custom">
            ✗ @TempData["Error"]
        </div>
    }

    <!-- Search Bar -->
    <div class="card-custom" style="margin-bottom: 20px;">
        <div style="padding: 20px;">
            <form asp-action="Index" method="get" id="searchForm">
                <div style="display: flex; gap: 10px; align-items: center;">
                    <div style="flex: 1; position: relative;">
                        <input type="text"
                               name="searchTerm"
                               id="searchInput"
                               value="@currentFilter"
                               class="form-control-custom"
                               placeholder="🔍 @Lang.GetText("SearchDirectionsPlaceholder")..."
                               style="padding-right: 100px;" />

                        @if (!string.IsNullOrEmpty(currentFilter))
                        {
                            <button type="button"
                                    id="clearSearch"
                                    style="position: absolute; right: 10px; top: 50%; transform: translateY(-50%); background: transparent; border: none; color: var(--error-color); cursor: pointer; font-size: 20px; padding: 5px 10px;"
                                    title="@Lang.GetText("ClearSearch")">
                                ✕
                            </button>
                        }
                    </div>

                    <button type="submit" class="btn-primary-custom" style="white-space: nowrap;">
                        🔍 @Lang.GetText("Search")
                    </button>

                    @if (!string.IsNullOrEmpty(currentFilter))
                    {
                        <a asp-action="Index" class="btn-secondary-custom" style="white-space: nowrap;">
                            🔄 @Lang.GetText("Reset")
                        </a>
                    }
                </div>
            </form>

            @if (!string.IsNullOrEmpty(currentFilter))
            {
                <div style="margin-top: 15px; padding: 10px; background: var(--primary-light); color: var(--white); border-radius: var(--border-radius); display: flex; justify-content: space-between; align-items: center;">
                    <span>
                        🔍 @Lang.GetText("SearchingFor"): <strong>"@currentFilter"</strong> - @Lang.GetText("Found") <strong>@Model.Count()</strong> @Lang.GetText("Results")
                    </span>
                </div>
            }
        </div>
    </div>

    <!-- Statistics -->
    @if (Model.Any())
    {
        <div class="card-custom" style="margin-bottom: 20px;">
            <div style="padding: 15px; background: var(--input-bg); border-radius: var(--border-radius);">
                <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(150px, 1fr)); gap: 20px;">
                    <div style="text-align: center;">
                        <div style="font-size: 28px; font-weight: bold; color: var(--primary-color);">
                            @Model.Count()
                        </div>
                        <div style="color: var(--medium-gray); font-size: 14px; margin-top: 5px;">
                            @Lang.GetText("TotalDirections")
                        </div>
                    </div>
                    <div style="text-align: center;">
                        <div style="font-size: 28px; font-weight: bold; color: var(--success-color);">
                            @Model.Count(d => d.IsActive)
                        </div>
                        <div style="color: var(--medium-gray); font-size: 14px; margin-top: 5px;">
                            @Lang.GetText("ActiveDirections")
                        </div>
                    </div>
                    <div style="text-align: center;">
                        <div style="font-size: 28px; font-weight: bold; color: var(--error-color);">
                            @Model.Count(d => !d.IsActive)
                        </div>
                        <div style="color: var(--medium-gray); font-size: 14px; margin-top: 5px;">
                            @Lang.GetText("InactiveDirections")
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

    <!-- Table -->
    @if (Model.Any())
    {
        <div class="card-custom">
            <div style="overflow-x: auto;">
                <table class="table-custom">
                    <thead>
                        <tr>
                            <th style="width: 80px;">@Lang.GetText("DirectionNumber")</th>
                            <th style="width: 150px;">@Lang.GetText("Image")</th>
                            <th>@Lang.GetText("Description")</th>
                            <th>@Lang.GetText("Status")</th>
                            <th>@Lang.GetText("CreatedDate")</th>
                            <th style="text-align: center; width: 250px;">@Lang.GetText("Actions")</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr style="@(item.IsActive ? "" : "opacity: 0.6; background-color: #f5f5f5;")">
                                <td>
                                    <span style="background: var(--primary-gradient); color: var(--white); padding: 8px 15px; border-radius: var(--border-radius); font-weight: bold; font-size: 16px; display: inline-block;">
                                        @item.DirectionNumber
                                    </span>
                                </td>
                                <td>
                                    @if (!string.IsNullOrEmpty(item.DirectionImage))
                                    {
                                        <img src="@item.DirectionImage"
                                             alt="@Lang.GetText("Direction") @item.DirectionNumber"
                                             style="width: 100px; height: 100px; object-fit: cover; border-radius: var(--border-radius); border: 2px solid var(--border-color); cursor: pointer;"
                                             onclick="showImageModal('@item.DirectionImage', '@Lang.GetText("Direction") @item.DirectionNumber')" />
                                    }
                                    else
                                    {
                                        <div style="width: 100px; height: 100px; background: var(--input-bg); border-radius: var(--border-radius); display: flex; align-items: center; justify-content: center; border: 2px dashed var(--border-color);">
                                            <span style="color: var(--medium-gray); font-size: 12px;">@Lang.GetText("NoImage")</span>
                                        </div>
                                    }
                                </td>
                                <td>
                                    @if (!string.IsNullOrEmpty(item.Description))
                                    {
                                        <span>@item.Description</span>
                                    }
                                    else
                                    {
                                        <span style="color: var(--medium-gray); font-style: italic;">@Lang.GetText("NoDescription")</span>
                                    }
                                </td>
                                <td>
                                    @if (item.IsActive)
                                    {
                                        <span style="background: var(--success-color); color: var(--white); padding: 5px 12px; border-radius: var(--border-radius-sm); font-size: 12px; font-weight: 500;">
                                            ✓ @Lang.GetText("Active")
                                        </span>
                                    }
                                    else
                                    {
                                        <span style="background: var(--error-color); color: var(--white); padding: 5px 12px; border-radius: var(--border-radius-sm); font-size: 12px; font-weight: 500;">
                                            ✗ @Lang.GetText("Inactive")
                                        </span>
                                    }
                                </td>
                                <td>@item.CreatedDate.ToString("MMM dd, yyyy")</td>
                                <td style="text-align: center;">
                                    <div class="action-buttons" style="justify-content: center;">
                                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn-warning-custom btn-sm-custom" title="@Lang.GetText("Edit")">
                                            ✏️ @Lang.GetText("Edit")
                                        </a>

                                        <form asp-action="ToggleStatus" asp-route-id="@item.Id" method="post" style="display:inline;">
                                            @Html.AntiForgeryToken()
                                            <button type="submit" class="@(item.IsActive ? "btn-secondary-custom" : "btn-success-custom") btn-sm-custom" title="@(item.IsActive? Lang.GetText("Deactivate") : Lang.GetText("Activate"))">
                                                @(item.IsActive ? "🔒 " + Lang.GetText("Deactivate") : "✓ " + Lang.GetText("Activate"))
                                            </button>
                                        </form>

                                        <form asp-action="Delete" asp-route-id="@item.Id" method="post" style="display:inline;">
                                            @Html.AntiForgeryToken()
                                            <button type="submit" class="btn-danger-custom btn-sm-custom"
                                                    onclick="return confirm('@Lang.GetText("DeleteDirectionConfirmation")')"
                                                    title="@Lang.GetText("Delete")">
                                                🗑️ @Lang.GetText("Delete")
                                            </button>
                                        </form>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }
    else
    {
        <div class="card-custom">
            <div class="empty-state">
                <div class="empty-state-icon">🔄</div>
                <h3 style="color: var(--medium-gray);">
                    @if (!string.IsNullOrEmpty(currentFilter))
                    {
                        <text>@Lang.GetText("NoDirectionsFound")</text>
                    }
                    else
                    {
                        <text>@Lang.GetText("NoDirectionsAvailable")</text>
                    }
                </h3>
                <p style="color: var(--medium-gray);">
                    @if (!string.IsNullOrEmpty(currentFilter))
                    {
                        <text>@Lang.GetText("TryAdjustingSearch")</text>
                    }
                    else
                    {
                        <text>@Lang.GetText("StartByAddingDirection")</text>
                    }
                </p>
                @if (string.IsNullOrEmpty(currentFilter))
                {
                    <a asp-action="Create" class="btn-primary-custom" style="margin-top: 20px;">
                        ➕ @Lang.GetText("AddNewDirection")
                    </a>
                }
                else
                {
                    <a asp-action="Index" class="btn-secondary-custom" style="margin-top: 20px;">
                        🔄 @Lang.GetText("ClearSearch")
                    </a>
                }
            </div>
        </div>
    }
</div>

<!-- Image Modal -->
<div id="imageModal" style="display: none; position: fixed; z-index: 9999; left: 0; top: 0; width: 100%; height: 100%; background-color: rgba(0,0,0,0.9);" onclick="closeImageModal()">
    <span style="position: absolute; top: 20px; right: 40px; color: #f1f1f1; font-size: 40px; font-weight: bold; cursor: pointer;">&times;</span>
    <img id="modalImage" style="margin: auto; display: block; max-width: 90%; max-height: 90%; margin-top: 50px;">
    <div id="modalCaption" style="text-align: center; color: #ccc; padding: 10px; font-size: 20px;"></div>
</div>

@section Scripts {
    <script>
        // Search functionality
        let searchTimeout;
        const searchInput = document.getElementById('searchInput');
        const searchForm = document.getElementById('searchForm');
        const clearSearchBtn = document.getElementById('clearSearch');

        if (searchInput) {
            searchInput.addEventListener('input', function() {
                clearTimeout(searchTimeout);
                searchTimeout = setTimeout(function() {
                    if (searchInput.value.length >= 1 || searchInput.value.length === 0) {
                        searchForm.submit();
                    }
                }, 500);
            });
            searchInput.focus();
        }

        if (clearSearchBtn) {
            clearSearchBtn.addEventListener('click', function() {
                searchInput.value = '';
                searchForm.submit();
            });
        }

        // Image Modal
        function showImageModal(imageSrc, caption) {
            const modal = document.getElementById('imageModal');
            const modalImg = document.getElementById('modalImage');
            const modalCaption = document.getElementById('modalCaption');

            modal.style.display = 'block';
            modalImg.src = imageSrc;
            modalCaption.innerHTML = caption;
        }

        function closeImageModal() {
            document.getElementById('imageModal').style.display = 'none';
        }

        // Close modal with ESC key
        document.addEventListener('keydown', function(e) {
            if (e.key === 'Escape') {
                closeImageModal();
            }
        });
    </script>
}